{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/andres/Documents/Github/ttf/app/root.tsx", "../app/components/navbar.tsx", "../app/components/shared/footer.tsx", "/Users/andres/Documents/Github/ttf/app/routes/questionnaire/resolved/$questionnaireId.tsx", "../app/utils/db.server.ts", "/Users/andres/Documents/Github/ttf/app/routes/questionnaire/edit/$questionnaireId.tsx", "/Users/andres/Documents/Github/ttf/app/routes/questionnaire/view/$questionnaireId.tsx", "../app/utils/params.server.ts", "../app/utils/share.ts", "../app/components/shared/modal.tsx", "../app/utils/browser.ts", "/Users/andres/Documents/Github/ttf/app/routes/questionnaire/resolved/index.tsx", "/Users/andres/Documents/Github/ttf/app/routes/questionnaire/create.tsx", "/Users/andres/Documents/Github/ttf/app/routes/questionnaire/owner.tsx", "/Users/andres/Documents/Github/ttf/app/routes/api/questionnaires.ts", "/Users/andres/Documents/Github/ttf/app/routes/category/$slug.tsx", "../app/components/category/questionnaire-item.tsx", "../app/utils/questionnaire.ts", "/Users/andres/Documents/Github/ttf/app/routes/sign-in/$.tsx", "/Users/andres/Documents/Github/ttf/app/routes/sign-up/$.tsx", "/Users/andres/Documents/Github/ttf/app/routes/index.tsx", "../app/components/category/explorer.tsx", "../app/utils/gradient.ts", "../app/components/home/create-form.tsx", "../app/components/home/my-questionnaires.tsx", "../app/components/home/home-in.tsx", "../app/components/home/home-out.tsx", "../app/components/shared/wave.tsx", "/Users/andres/Documents/Github/ttf/app/routes/me/$.tsx", "/Users/andres/Documents/Github/ttf/app/routes/404.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { rootAuthLoader } from \"@clerk/remix/ssr.server\";\nimport { ClerkApp } from \"@clerk/remix\";\nimport { ClerkCatchBoundary } from \"@clerk/remix\";\n\nimport styles from \"./styles/app.css\";\nimport { Navbar } from \"./components/navbar\";\nimport { Footer } from \"./components/shared/footer\";\n\nexport const CatchBoundary = ClerkCatchBoundary();\n\nexport const loader: LoaderFunction = (args) => rootAuthLoader(args);\n\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }]\n}\n\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Ten True or False\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\n\nfunction App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"bg-white text-black\">\n        <Navbar />\n        <main className=\"mt-20 min-h-screen\">\n          <Outlet />\n        </main>\n        <Footer />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport default ClerkApp(App);", "import { SignedIn, SignedOut, useClerk, } from \"@clerk/remix\";\n\nimport { Link } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\n\nexport function Navbar() {\n\n    const { signOut } = useClerk();\n    const [isDisabled, setIsDisabled] = useState(false);\n\n    const handleOnExitSession = async () => {\n        setIsDisabled(true);\n        await signOut();\n        setIsDisabled(false);\n        window.location.href = '/';\n    }\n\n\n    return (\n        <nav className=\"bg-white h-16 fixed top-0 left-0 right-0 flex justify-between items-center border-b border-slate-200 border-solid z-10\">\n            <div className=\"flex items-center gap-2 ml-4\">\n                <Link to=\"/\">\n                    <img src=\"/img/logo.png\" alt=\"logo\" className=\"w-12 h-12 rounded-full\" />\n                </Link>\n                \n                <Link to=\"/\">\n                    <span className=\"font-bold\">#TenTrueOrFalse</span>\n                </Link>\n            </div>\n            <SignedIn>\n                <div className=\"mr-4 flex gap-6 text-sm items-center\">\n                    <Link to=\"me\" className=\"text-slate-600\">Perfil</Link>\n                    <button disabled={isDisabled} onClick={handleOnExitSession} className=\"rounded px-4 py-2 border border-solid border-black bg-white text-black disabled:bg-gray-400 disabled:border-gray-400 disabled:text-gray-700\">Sign out</button>\n                </div>\n            </SignedIn>\n            <SignedOut>\n                <div className=\"mr-4 flex gap-6 text-sm items-center\">\n                    <Link to=\"sign-in\" className=\"text-slate-600\">Sign In</Link>\n                    <Link className=\"bg-black text-white rounded px-4 py-2 border border-solid border-black hover:bg-white hover:text-black\" to=\"sign-up\">Sign Up</Link>\n                </div>\n            </SignedOut>\n            \n        </nav>\n    );\n}", "export function Footer() {\n    return(\n        <footer className=\"p-8 flex flex-col gap-2 text-center md:flex-row md:justify-between md:text-start\">\n            <span className=\"text-slate-600 font-light\">{'\\u00a9'} 2022</span>\n            <span className=\"font-semibold\">\n                Built for <a href=\"https://hashnode.com/\" target=\"_blank\" className=\"text-pink-600 underline\">PlanetScale</a> X <a href=\"https://planetscale.com/\" target=\"_blank\" className=\"text-purple-700 underline\">Hashnode</a> <a href=\"https://townhall.hashnode.com/planetscale-hackathon\" target=\"_blank\" className=\"text-indigo-700 underline\">Hackathon</a>\n            </span>\n            <span className=\"flex gap-3 justify-center\">\n                <a href=\"https://twitter.com/andres_lopez_rm\" target=\"_blank\" className=\"hover:opacity-80\">\n                    <img src=\"/img/twitter.png\" alt=\"twitter\" width=\"24\" />\n                </a>\n                <a href=\"https://github.com/andreslopezrm/ttf\" target=\"_blank\" className=\"hover:opacity-80\">\n                    <img src=\"/img/github.png\" alt=\"github\" width=\"24\" />\n                </a>\n            </span>\n        </footer>\n    );\n}", "import { db } from \"~/utils/db.server\";\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport { Question, Questionnaire } from \"@prisma/client\";\nimport { ActionFunction, LoaderFunction, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData, useNavigate, useTransition } from \"@remix-run/react\";\n\n\ntype LoaderTypeData = {\n    questionnarie: Questionnaire & { questions: Question[] };\n}\n\ntype ActionTypeData = {\n    score?: number;\n    resolveId?: string;\n}\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const { userId } = await getAuth(request);\n    if(!userId){\n        return redirect(`${process.env.CLERK_REDIRECT_LOGIN!!}?redirect_url=${request.url}`);\n    }\n\n    const { questionnaireId } = params;\n\n    const existResolve = await db.resolve.findFirst({\n        where: {\n            userId,\n            questionnaireId\n        }\n    });\n\n    if(existResolve) {\n        return redirect(`/questionnaire/view/${questionnaireId}?show_modal=yes`);\n    }\n\n    const questionnarie = await db.questionnaire.findFirst({\n        where: {\n            id: questionnaireId\n        },\n        include: {\n            questions: {\n                orderBy: {\n                    name: \"asc\"\n                }\n            }\n        }\n    });\n\n    if(!questionnarie) {\n        return redirect(\"/404\");\n    }\n\n    if(questionnarie.userId === userId) {\n        return redirect(`/questionnaire/edit/${questionnarie.id}`);\n    }\n\n    return { questionnarie };\n}\n\n\nexport const action: ActionFunction = async ({ request, params }) => {\n    const { userId } = await getAuth(request);\n    if(!userId){\n        return redirect(`${process.env.CLERK_REDIRECT_LOGIN!!}?redirect_url=${request.url}`);\n    }\n\n    const { questionnaireId } = params;\n    console.log('*****action', questionnaireId);\n    const questionnarie = await db.questionnaire.findFirst({\n        where: {\n            id: questionnaireId\n        },\n        include: {\n            questions: {\n                orderBy: {\n                    name: \"asc\"\n                }\n            }\n        }\n    });\n\n    if(!questionnarie) {\n        return redirect(\"/404\");\n    }\n\n    const { questions } = questionnarie;\n    const formData = await request.formData();\n\n    const formAnswers = questions.map(question => {\n        const { name } = question;\n        const value = formData.get(`${name}-answer`) === \"true\";\n        const isCorrect = question.answer === value;\n        \n        return { name, value, isCorrect };\n    });\n\n    const score = formAnswers.filter(({ isCorrect }) => isCorrect).length;\n\n    const resolve = await db.resolve.create({\n        data: {\n            userId,\n            questionnaireId: questionnarie.id,\n            score\n        }\n    });\n\n    const { id: resolveId } = resolve;\n    const answers = formAnswers.map(answer => ({ resolveId, ...answer }));\n\n    await db.answer.createMany({\n        data: answers\n    });\n\n    return { score, resolveId };\n}\n\nexport default function QuestionnarieResolvedPage() {\n    const { questionnarie } = useLoaderData<LoaderTypeData>();\n    const data = useActionData<ActionTypeData>();\n    console.log('data', data)\n\n    const { name, questions, id } = questionnarie;\n    const { state } = useTransition();\n    const navigate = useNavigate();\n    \n    return (\n        <>\n            <section className=\"container m-0 mx-auto\">\n                <div className=\"px-8\">\n                    <Form method=\"post\" className=\"flex flex-col md:w-8/12 md:m-0 md:mx-auto\">\n\n                        <label className=\"block text-gray-900 text-3xl font-extrabold mb-4 mt-4\" htmlFor=\"name\">\n                            {name}\n                        </label>\n\n                        {\n                            questions.map(({ id, name, description }) => (\n                                    <div className=\"py-6 border-b border-b-slate-200 flex justify-between items-center gap-4\" key={id}>\n                                        <label className=\"block text-slate-600 text-lg font-normal mb-2\" htmlFor={`${name}-description`}>\n                                            {description}\n                                        </label>\n                                        \n                                        <div className=\"mt-6 flex gap-4\">\n                                            <div>\n                                                <input required id={`${name}-answer-true`} value=\"true\" name={`${name}-answer`} type=\"radio\" className=\"sr-only peer\" />\n                                                <label htmlFor={`${name}-answer-true`} className=\" text-sm cursor-pointer px-3 py-2 rounded-md text-slate-600 bg-gradient-to-br from-white to-white peer-checked:bg-gradient-to-br border-purple-500 border-solid border-2 peer-checked:from-purple-500 peer-checked:to-pink-500 peer-checked:text-white peer-checked:border-white\">\n                                                    True\n                                                </label>\n                                            </div>\n\n                                            <div>\n                                                <input required id={`${name}-answer-false`} value=\"false\" name={`${name}-answer`} type=\"radio\" className=\"sr-only peer\" />\n                                                <label htmlFor={`${name}-answer-false`} className=\"text-sm cursor-pointer px-3 py-2 rounded-md text-slate-600 bg-gradient-to-br from-white to-white peer-checked:bg-gradient-to-br border-purple-500 border-solid border-2 peer-checked:from-purple-500 peer-checked:to-pink-500 peer-checked:text-white peer-checked:border-white\">\n                                                    False\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            )\n                        }\n                        <div className=\"mt-8 mb-32 flex justify-end\">\n                            <button disabled={state === \"submitting\"} type=\"submit\" className=\"w-40 relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-red-200 via-red-300 to-yellow-200 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 focus:ring-4 focus:outline-none focus:ring-red-100 disabled:opacity-40 disabled:pointer-events-none\">\n                                <span className=\"w-40 relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0 text-lg\">\n                                    Resolve {state === \"submitting\" ? \" ...\" : \"\"}\n                                </span>\n                            </button>\n                        </div>\n                    </Form>\n                </div>\n            </section>\n        </>\n    );\n}", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n  }\n  db = global.__db;\n}\n\nexport { db };", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { Category, Question, Questionnaire } from \"@prisma/client\";\nimport { ActionFunction, LoaderFunction, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, useTransition } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\n\n\ntype LoaderTypeData = {\n    questionnaire: Questionnaire & { questions: Question[] };\n    categories: Category[];\n}\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n\n    const { userId } = await getAuth(request);\n    if(!userId){\n        return redirect(`${process.env.CLERK_REDIRECT_LOGIN!!}?redirect_url=${request.url}`);\n    }\n\n    const { questionnaireId } = params;\n\n    const questionnaire = await db.questionnaire.findFirst({\n        where: { \n            id: questionnaireId\n        },\n        include: {\n            questions: {\n                orderBy: {\n                    name: \"asc\"\n                }\n            }\n        }\n    });\n\n    if(questionnaire === null){\n        return redirect(\"/404\");\n    }\n\n    if(questionnaire?.userId !== userId) {\n        return redirect(\"/404\");\n    }\n    \n    const categories = await db.category.findMany();\n    return { questionnaire, categories };\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n    const { userId } = await getAuth(request);\n    if(!userId){\n        return redirect(`${process.env.CLERK_REDIRECT_LOGIN!!}?redirect_url=${request.url}`);\n    }\n\n    const { questionnaireId } = params;\n\n    const questionnaire = await db.questionnaire.findFirst({\n        where: { \n            id: questionnaireId\n        },\n        include: {\n            questions: true\n        }\n    });\n\n    if(questionnaire === null){\n        return redirect(\"/404\");\n    }\n\n    if(questionnaire?.userId !== userId) {\n        return redirect(\"/404\");\n    }\n\n    const formData = await request.formData();\n    const name = formData.get(\"name\")?.toString() ?? \"\";\n    const categoryId = formData.get(\"categoryId\")?.toString() ?? \"\";\n    const {  questions } = questionnaire;\n\n    await db.questionnaire.update({\n        where: {\n            id: questionnaireId\n        },\n        data: {\n            name,\n            categoryId,\n            userId\n        }\n    });\n\n    const questionsUpdateList = questions.map(question => {\n        const { id, name } = question;\n        const description = formData.get(`${name}-description`)?.toString() ?? \"\";\n        const answer = formData.get(`${name}-answer`) === \"true\";\n\n        return db.question.update({\n            where: {\n                id\n            },\n            data: {\n                description,\n                answer\n            }\n        });\n    });\n\n    await Promise.all(questionsUpdateList);\n\n    return redirect(\"/questionnaire/owner\");\n\n}\n\nexport default function QuestionnaireEdit() {\n\n    const { state } = useTransition();\n    const { questionnaire, categories } = useLoaderData<LoaderTypeData>();\n\n    const { name, questions, categoryId } = questionnaire;\n    \n    return (\n        <div className=\"container m-0 mx-auto\">\n            <div className=\"px-8\">\n\n                <Form method=\"post\" className=\"flex flex-col md:w-8/12 md:m-0 md:mx-auto\">\n                        \n                        <label className=\"block text-gray-900 text-3xl font-extrabold mb-4 mt-4\" htmlFor=\"name\">\n                            Questionnarie Name\n                        </label>\n                        <input defaultValue={name} required className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" name=\"name\" type=\"text\" placeholder=\"name\" />\n            \n                        <p className=\"mt-8\">Enter 10 questions each with a true or false answer, can be a combination of true/false or all true or all false</p>\n\n                        <div>\n                            <label htmlFor=\"categoryId\" className=\"block text-gray-700 text-sm font-bold mb-2\">Category</label>\n                            <select required defaultValue={categoryId} name=\"categoryId\" id=\"categoryId\" className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                                <option value=\"\">- Select an option - </option>\n                                { categories.map(({ id, name }) => (\n                                    <option key={id} value={id}>{name}</option>\n                                ))}\n                            </select>\n                        </div>\n\n                        {\n                            questions.map(({ id, name, answer, description }) => {\n                                const identifierNumber = parseInt(name.split(\"-\")[1], 10);\n                                return (\n                                    (\n                                        <div className=\"mt-8 mb-2 md:flex md:justify-between md:gap-4 items-center\" key={id}>\n                                            <div className=\"md:flex-1\">\n                                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor={`${name}-description`}>\n                                                    Question {identifierNumber}\n                                                </label>\n                                                <input defaultValue={description} required className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id={`${name}-description`} name={`${name}-description`} type=\"text\" placeholder={`Question ${identifierNumber}`} />\n                                            </div>\n\n                                            <div className=\"mt-6 flex gap-4\">\n                                                <div>\n                                                    <input id={`${name}-answer-true`} defaultChecked={answer === true} value=\"true\" name={`${name}-answer`} type=\"radio\" className=\"sr-only peer\" />\n                                                    <label htmlFor={`${name}-answer-true`} className=\"cursor-pointer px-3 py-2 rounded-md text-slate-600 bg-gradient-to-br from-white to-white peer-checked:bg-gradient-to-br border-purple-500 border-solid border-2 peer-checked:from-purple-500 peer-checked:to-pink-500 peer-checked:text-white peer-checked:border-white\">\n                                                        True\n                                                    </label>\n                                                </div>\n\n                                                <div>\n                                                    <input id={`${name}-answer-false`} defaultChecked={answer === false} value=\"false\" name={`${name}-answer`} type=\"radio\" className=\"sr-only peer\" />\n                                                    <label htmlFor={`${name}-answer-false`} className=\"cursor-pointer px-3 py-2 rounded-md text-slate-600 bg-gradient-to-br from-white to-white peer-checked:bg-gradient-to-br border-purple-500 border-solid border-2 peer-checked:from-purple-500 peer-checked:to-pink-500 peer-checked:text-white peer-checked:border-white\">\n                                                        False\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                );\n                            })\n                        }\n                        \n\n                        <div className=\"mt-8 mb-32 flex justify-end\">\n                            <button disabled={state === \"submitting\"} className=\"w-40 relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-red-200 via-red-300 to-yellow-200 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 focus:ring-4 focus:outline-none focus:ring-red-100 disabled:opacity-40 disabled:pointer-events-none\">\n                                <span className=\"w-40 relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0 text-lg\">\n                                    Save {state === \"submitting\" ? \" ...\" : \"\"}\n                                </span>\n                            </button>\n                        </div>\n\n                    </Form>\n\n            </div>\n        </div>\n    );\n}", "import { useEffect, useState } from \"react\";\nimport Confetti from \"react-confetti\";\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport { Answer, Question, Questionnaire, Resolve } from \"@prisma/client\";\nimport { LoaderFunction, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\nimport { getQueryStringParameter } from \"~/utils/params.server\";\nimport { Modal } from \"~/components/shared/modal\";\nimport { getClientHeight, getClientWidth } from \"~/utils/browser\";\n\ntype LoaderTypeData = {\n    showModal: boolean;\n    baseUrl: string;\n    resolved: Resolve & {\n        answers: Answer[];\n        questionnaire: Questionnaire & {\n            questions: Question[];\n        }\n    }\n}\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    \n    const { userId } = await getAuth(request);\n    if(!userId){\n        return redirect(`${process.env.CLERK_REDIRECT_LOGIN!!}?redirect_url=${request.url}`);\n    }\n\n    const { questionnaireId } = params;\n\n    const resolved = await db.resolve.findFirst({\n        where: {\n            userId,\n            questionnaireId\n        },\n        include: {\n            answers: {\n                orderBy: {\n                    name: \"asc\"\n                }\n            },\n            questionnaire: {\n                include: {\n                    questions: true\n                }\n            }\n        }\n    });\n\n    if(!resolved) {\n        return redirect(\"/404\");\n    }\n\n    const showModal = getQueryStringParameter(request, \"show_modal\") !== null;\n    const baseUrl = process.env.BASE_URL;\n\n    return { resolved, showModal, baseUrl }\n}\n\nexport default function QuestionnaireViewPage() {\n\n    const { resolved, showModal, baseUrl } = useLoaderData<LoaderTypeData>();\n    const { questionnaire, answers, score } = resolved;\n    const {  questions } = questionnaire;\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        setModal(showModal);\n    }, []);\n\n    const obtainQuestionByName = (name: string) => questions.find(question => question.name === name)?.description;\n\n    const handleOnClose = () => setModal(false);\n\n    const buildTweetText = () => {\n        const emoji = resolved?.score === 10 ? \"\uD83D\uDCC0\" : \"\uD83D\uDCBF\";\n        return `#TenTrueOrFalse I have obtained a score of 10 / 10 ${emoji}\n        `;\n    }\n    \n    return (\n        <>\n            <div className=\"container m-0 mx-auto\">\n                <div className=\"px-8\">\n                    <h3 className=\"block text-gray-900 text-3xl font-extrabold mb-4 mt-4\">\n                        {questionnaire.name}\n                    </h3>\n                    <p className=\"mt-4 text-slate-700 text-lg mb-4 font-extrabold\">Score: {score} / 10</p>\n                    \n                    <div className=\"overflow-x-auto relative mb-16\">\n                        <table className=\"w-full text-sm text-left text-gray-500\">\n                            <tbody>\n                                {\n                                    answers.map(({ id, name, value, isCorrect }) => (\n                                        <tr className=\"bg-white border-b\" key={id}>\n                                            <td className=\"py-4 px-6\">\n                                                {obtainQuestionByName(name)}\n                                            </td>\n                                            <td className=\"py-4 px-6\">\n                                                { value ? \"True\" : \"False\"}\n                                            </td>\n                                            <td className=\"py-4 px-6\">\n                                                {\n                                                    isCorrect \n                                                    ? <div className=\"flex items-center ml-3 gap-1\">\n                                                        <span className=\"text-green-800\">Correct</span>\n                                                    </div>\n                                                    : <div className=\"flex items-center ml-3 gap-1\">\n                                                        <span className=\"text-red-800\">Incorrect</span>\n                                                    </div>\n                                                }\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </div>\n            { modal\n                ?   <Modal onClose={handleOnClose} text={buildTweetText()} shareUrl={`${baseUrl}/questionnaire/resolved/${resolved?.questionnaireId}`}>\n                        <div className=\"font- text-lg font-extralight\">\n                            <p>\n                                You have achieved a score for this quiz of \n                                <strong> { resolved?.score } / 10</strong>\n                            </p>\n                        </div>\n                    </Modal> \n                : null \n            }\n            {\n                modal && resolved?.score === 10\n                    ? <div className=\"fixed z-20 top-0 left-0 right-0 h-1/5\">\n                            <Confetti\n                                width={getClientWidth()}\n                                height={getClientHeight() * 0.4}\n                            />\n                        </div>\n                    : null\n            }\n        </>\n    );\n}", "export function getQueryIntParameter(request: Request, name: string, defaultValue: number): number {\n    const url = new URL(request.url);\n    const param  = parseInt(url.searchParams.get(name) ?? \"\", 10);\n    if(!isNaN(param)){\n        return param;\n    }\n    return defaultValue;\n}\n\nexport function getQueryStringParameter(request: Request, name: string): string | null {\n    const url = new URL(request.url);\n    return url.searchParams.get(name);\n}", "export function shareTwitterUrl(text: string, url: string | null = null, hashtags: string | null = null): string {\n    const params = new URLSearchParams();\n    params.append(\"text\", text);\n\n    if(url) {\n        params.append(\"url\", url);\n    }\n\n    if(hashtags) {\n        params.append(\"hashtags\", hashtags);\n    }\n    \n    return `http://twitter.com/share?${params.toString()}`;\n}", "import { shareTwitterUrl } from \"~/utils/share\";\n\ntype Props = {\n    children?: JSX.Element;\n    onClose: Function;\n    text: string;\n    shareUrl?: string | null;\n}\n\nexport function Modal({ children, onClose, text, shareUrl }: Props) {\n    return (\n        <div id=\"defaultModal\" aria-hidden=\"true\" className=\" bg-white bg-opacity-80 flex justify-center items-center overflow-y-auto overflow-x-hidden fixed top-0 right-0 bottom-0 left-0 z-10 w-full md:inset-0 h-modal md:h-full\">\n            <div className=\"max-w-2xl m-8 relative inline-flex items-center justify-center p-1 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 focus:ring-4 focus:outline-none focus:ring-purple-200\">\n                <div className=\"relative p-8 transition-all ease-in duration-75 bg-white rounded-md\">\n                    <div className=\"mb-4 flex justify-between\">\n                        <h3 className=\"font-bold text-xl\">#TTF</h3>\n                        <button type=\"button\" onClick={() => onClose()}>\n                            <img src=\"/img/incorrect.png\" width=\"31\" />\n                        </button>\n                    </div>\n                    <div>\n                        { children }\n                    </div>\n                    <div className=\"flex justify-end gap-2 mt-8\">\n                        <a href={shareTwitterUrl(text, shareUrl)} target=\"_blank\" className=\"relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-cyan-500 to-blue-500 focus:ring-4 focus:outline-none focus:ring-cyan-200\">\n                            <span className=\"relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md\">\n                                Tweet\n                            </span>\n                        </a>\n                        <button type=\"button\" onClick={() => onClose()} className=\"text-white bg-gradient-to-r from-purple-500 to-pink-500 hover:bg-gradient-to-l focus:ring-4 focus:outline-none focus:ring-purple-200 font-semibold rounded-lg text-base px-8 py-2.5 text-center mr-2 mb-2\">\n                            Acept\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}", "export const getClientWidth = () => window.document.body.clientWidth;\n\nexport const getClientHeight = () => window.document.body.clientHeight;", "import dayjs from \"dayjs\";\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport { Category, Questionnaire } from \"@prisma/client\";\nimport { LoaderFunction, redirect } from \"@remix-run/node\";\nimport { useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PER_PAGE_OWN_QUESTIONNAIRES } from \"~/utils/constants\";\nimport { db } from \"~/utils/db.server\";\nimport { getQueryIntParameter, getQueryStringParameter } from \"~/utils/params.server\";\nimport { shareTwitterUrl } from \"~/utils/share\";\n\ntype LoaderTypeData = {\n    total: number;\n    offset: number;\n    hasPrev: boolean, \n    hasNext: boolean;\n    questionnaries: (Questionnaire & { category: Category })[];\n    baseUrl: string;\n    search: string | null;\n}\n\ntype FilterData = {\n    userId: string;\n    questionnaire?: {\n        name: {\n            contains: string;\n        }\n    }\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const { userId } = await getAuth(request);\n    if(!userId){\n        return redirect(`${process.env.CLERK_REDIRECT_LOGIN!!}?redirect_url=${request.url}`);\n    }\n\n    const take = getQueryIntParameter(request, \"per_page\", PER_PAGE_OWN_QUESTIONNAIRES); \n    const skip = getQueryIntParameter(request, \"offset\", 0);\n    const search = getQueryStringParameter(request, \"search\");\n\n    const filter: FilterData = {\n        userId\n    };\n\n    if(search) {\n        filter.questionnaire = {\n            name: {\n                contains: search\n            }\n        };\n    }\n\n    const totalQuery = await db.resolve.count({\n        where: {\n            ...filter\n        }\n    });\n\n    const resolvedQuery = db.resolve.findMany({\n        skip,\n        take,\n        where: {\n            ...filter,\n        },\n        orderBy: {\n            createdAt: \"desc\"\n        },\n        include: {\n            questionnaire: {\n                include: {\n                    category: true\n                }\n            }\n        }\n    });\n\n    const [total, resolved] = await Promise.all([ totalQuery, resolvedQuery ]);\n    const questionnaries = resolved.map(({ questionnaire, score }) => ({...questionnaire, score}));\n\n    const hasPrev = skip > 0;\n    const totalCurrent = skip + take;\n\n    const hasNext = totalCurrent < total ? true : false;\n\n    const baseUrl = process.env.BASE_URL;\n    \n\n    return { total, questionnaries, offset: skip, hasPrev, hasNext, baseUrl };\n}\n\nexport default function QuestionnaireResolvePage() {\n\n    const navigate = useNavigate();\n    const { questionnaries, hasPrev, hasNext, offset, search, baseUrl } = useLoaderData<LoaderTypeData>();\n    const [term, setTerm] = useState<string | null>(search);\n\n    useEffect(() => {\n        if(term === \"\") {\n            navigate(\"/questionnaire/resolved\");\n        }\n    }, [term]);\n\n    const handleOnChageSearch = (event: ChangeEvent<HTMLInputElement>) => setTerm(event.target.value);\n\n    const handleOnSearch = (event: FormEvent) => {\n        event.preventDefault();\n        navigate(`/questionnaire/resolved?search=${term}`);\n    }\n\n    const buildLinkPrev = () => {\n        if(offset === 0 && !term) {\n            return \"/questionnaire/resolved\";\n        }\n\n        const params = new URLSearchParams();\n        const offserDiff = offset - PER_PAGE_OWN_QUESTIONNAIRES\n        if(offserDiff > 0) {\n            params.append(\"offset\", offserDiff.toString());\n        }\n\n        if(term) {\n            params.append(\"search\", term);\n        }\n\n        return `/questionnaire/resolved?${params.toString()}`;\n    }\n\n    const buildLinkNext = () => {\n        const params = new URLSearchParams();\n\n        const nextOffset = offset + PER_PAGE_OWN_QUESTIONNAIRES;\n        params.append(\"offset\", nextOffset.toString());\n\n        if(term) {\n            params.append(\"search\", term);\n        }\n        \n        return `/questionnaire/resolved?${params.toString()}`;\n    }\n\n    return (\n        <div className=\"container m-0 mx-auto\">\n            <div className=\"px-8\">\n                <div className=\"md:flex md:justify-between md:items-center\">\n                    <h1 className=\"mt-12 text-3xl mb-8 font-extrabold\">My Resolved</h1>\n                    <form onSubmit={handleOnSearch} className=\"mb-8 md:mb-0\">\n                        <label htmlFor=\"search\" className=\"mb-2 text-sm font-medium text-gray-900 sr-only\">Search</label>\n                        <div className=\"relative\">\n                            <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n                                <svg aria-hidden=\"true\" className=\"w-5 h-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                            </div>\n                            <input type=\"search\" id=\"search\" name=\"search\" className=\"block p-4 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Search...\" required onChange={handleOnChageSearch} />\n                            <button type=\"submit\" className=\"text-white absolute right-2.5 bottom-2.5 bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br font-medium rounded-lg text-sm px-4 py-2\">Search</button>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"overflow-x-auto relative\">\n                    <table className=\"w-full text-sm text-left text-gray-500\">\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                            <tr>\n                                <th scope=\"col\" className=\"py-3 px-6\">\n                                    Name\n                                </th>\n                                <th scope=\"col\" className=\"py-3 px-6\">\n                                    Category\n                                </th>\n                                <th>\n                                    Score\n                                </th>\n                                <th scope=\"col\" className=\"py-3 px-6\">\n                                    Resolved At\n                                </th>\n                                <th scope=\"col\" className=\"py-3 px-6\">\n                                    Actions\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { questionnaries.length > 0 \n                                ? questionnaries.map(questionnarie => (\n                                    <tr key={questionnarie.id} className=\"bg-white border-b\">\n                                        <th scope=\"row\" className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap\">\n                                            {questionnarie.name}\n                                        </th>\n                                        <td className=\"py-4 px-6\">\n                                            {questionnarie.category.name}\n                                        </td>\n                                        <td>\n                                            {}\n                                        </td>\n                                        <td className=\"py-4 px-6\">\n                                            {dayjs(questionnarie.createdAt).format(\"MMMM D, YYYY h:mm A\")}\n                                        </td>\n                                        <td className=\"py-4 px-6\">\n                                            <div className=\"flex\">\n                                                <Link to={`/questionnaire/view/${questionnarie.id}`} className=\"relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white focus:ring-4 focus:outline-none focus:ring-purple-200\">\n                                                    <span className=\"relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                                                        View\n                                                    </span>\n                                                </Link>\n    \n                                                <a href={shareTwitterUrl(\"#TenTrueOrFalse I invite you to solve this quizz of only 10 questions \uD83D\uDCBF \\n\\n\", `${baseUrl}/questionnaire/resolved/${questionnarie.id}`)} target=\"_blank\" className=\"text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\">\n                                                    Tweet\n                                                </a>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))\n                                : <tr>\n                                    <td colSpan={5}>\n                                        <div className=\"flex justify-center mt-8\">\n                                            <div>\n                                                <figure>\n                                                    <img src=\"/img/empty.png\" alt=\"empty\" width=\"50\" />\n                                                </figure>\n                                                <p className=\"text-lg text-slate-600 font-light\">Empty</p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                  </tr>\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                \n                <div className=\"mt-8 flex gap-4 justify-between\">\n                    <Link to={buildLinkPrev()} className={`relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white focus:ring-4 focus:outline-none focus:ring-purple-200 disabled:opacity-50 disabled:pointer-events-none disabled:from-slate-300 disabled:to-slate-400 ${hasPrev ? \"\": \"pointer-events-none opacity-40 grayscale\"}`}>\n                        <span className=\"relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                            Previous\n                        </span>\n                    </Link>\n\n                    <Link to={buildLinkNext()} className={`relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white focus:ring-4 focus:outline-none focus:ring-purple-200 disabled:opacity-50 disabled:pointer-events-none disabled:from-slate-300 disabled:to-slate-400 ${hasNext ? \"\" : \"pointer-events-none opacity-40 grayscale\"}`}>\n                        <span className=\"relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                            Next\n                        </span>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}", "import { getAuth } from \"@clerk/remix/ssr.server\";\nimport { Category } from \"@prisma/client\";\nimport { LoaderFunction, redirect, ActionFunction } from \"@remix-run/node\";\nimport { Form, useLoaderData, useTransition } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\n\nconst questionsKeyList = [\"01\", \"02\",\"03\",\"04\",\"05\", \"06\", \"07\", \"08\", \"09\",\"10\"];\n\ntype LoaderTypeData = {\n    questionnarie: string;\n    categories: Category[]\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n    const { userId } = await getAuth(request);\n    if(!userId){\n        return redirect(`${process.env.CLERK_REDIRECT_LOGIN!!}?redirect_url=${request.url}`);\n    }\n    \n    const url = new URL(request.url);\n    const questionnarie = url.searchParams.get(\"questionnarie\");\n    const categories = await db.category.findMany();\n\n    return { userId, questionnarie, categories };\n  };\n\nexport const action: ActionFunction = async ({ request }) => {\n\n    const { userId } = await getAuth(request);\n    if(!userId){\n        return redirect(`${process.env.CLERK_REDIRECT_LOGIN!!}?redirect_url=${request.url}`);\n    }\n\n    const formData = await request.formData();\n    const name = formData.get(\"name\")?.toString() ?? \"\";\n    const categoryId = formData.get(\"categoryId\")?.toString() ?? \"\";\n\n    const questionnarie = await db.questionnaire.create({\n        data: {\n            name, categoryId, userId \n        }\n    });\n\n    const questionsData = questionsKeyList.map(questionKey => {\n\n        const description = formData.get(`question-${questionKey}-description`)?.toString() ?? \"\";\n        const answer = formData.get(`question-${questionKey}-answer`) === \"true\";\n        const name = `question-${questionKey}`;\n\n        return {\n            name,\n            description,\n            answer,\n            questionnaireId: questionnarie.id\n        }\n    });\n\n    await db.question.createMany({ data: questionsData });\n\n    return redirect(\"/questionnaire/owner\");\n};\n\nexport default function QuestionnairePageCreate() {\n    const { state } = useTransition();\n    const { questionnarie, categories } = useLoaderData<LoaderTypeData>();\n\n    return (\n        <>\n\n            <div className=\"container m-0 mx-auto\">\n                <div className=\"px-8\">\n                    <Form method=\"post\" className=\"flex flex-col md:w-8/12 md:m-0 md:mx-auto\">\n                    \n                        <label className=\"block text-gray-900 text-3xl font-extrabold mb-4\" htmlFor=\"name\">\n                            Questionnarie Name\n                        </label>\n                        <input defaultValue={questionnarie} required className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" name=\"name\" type=\"text\" placeholder=\"name\" />\n            \n                        <p className=\"mt-8 mb-4\">Enter 10 questions each with a true or false answer, can be a combination of true/false or all true or all false</p>\n\n                        <div>\n                            <label htmlFor=\"categoryId\" className=\"block text-gray-700 text-sm font-bold mb-2\">Category</label>\n                            <select required name=\"categoryId\" id=\"categoryId\" className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                                <option value=\"\">- Select an option - </option>\n                                { categories.map(({ id, name }) => (\n                                    <option key={id} value={id}>{name}</option>\n                                ))}\n                            </select>\n                        </div>\n\n                        {\n                            questionsKeyList.map(questionKey => (\n                                <div className=\"mt-8 mb-2 md:flex md:justify-between md:gap-4 items-center\" key={questionKey}>\n                                    <div className=\"md:flex-1\">\n                                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor={`question-${questionKey}-description`}>\n                                            Question {parseInt(questionKey, 10)}\n                                        </label>\n                                        <input required className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id={`question-${questionKey}-description`} name={`question-${questionKey}-description`} type=\"text\" placeholder={`Question ${parseInt(questionKey, 10)}`} />  \n                                    </div>\n                                    <div className=\"mt-6 flex gap-4\">\n                                        <div>\n                                            <input id={`question-${questionKey}-answer-true`} value=\"true\" name={`question-${questionKey}-answer`} type=\"radio\" className=\"sr-only peer\" />\n                                            <label htmlFor={`question-${questionKey}-answer-true`} className=\"cursor-pointer px-3 py-2 rounded-md text-slate-600 bg-gradient-to-br from-white to-white peer-checked:bg-gradient-to-br border-purple-500 border-solid border-2 peer-checked:from-purple-500 peer-checked:to-pink-500 peer-checked:text-white peer-checked:border-white\">\n                                                True\n                                            </label>\n                                        </div>\n\n                                        <div>\n                                            <input id={`question-${questionKey}-answer-false`} value=\"false\" name={`question-${questionKey}-answer`} type=\"radio\" className=\"sr-only peer\" />\n                                            <label htmlFor={`question-${questionKey}-answer-false`} className=\"cursor-pointer px-3 py-2 rounded-md text-slate-600 bg-gradient-to-br from-white to-white peer-checked:bg-gradient-to-br border-purple-500 border-solid border-2 peer-checked:from-purple-500 peer-checked:to-pink-500 peer-checked:text-white peer-checked:border-white\">\n                                                False\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))\n                        }\n\n                        <div className=\"mt-8 mb-32 flex justify-end\">\n                            <button disabled={state === \"submitting\"} className=\"w-40 relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-red-200 via-red-300 to-yellow-200 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 focus:ring-4 focus:outline-none focus:ring-red-100 disabled:opacity-40 disabled:pointer-events-none\">\n                                <span className=\"w-40 relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0 text-lg\">\n                                    Save {state === \"submitting\" ? \" ...\" : \"\"}\n                                </span>\n                            </button>\n                        </div>\n\n                    </Form>\n                </div>\n            </div>\n        </>\n    );\n}", "import dayjs from \"dayjs\";\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport { Category, Questionnaire } from \"@prisma/client\";\nimport { LoaderFunction, redirect } from \"@remix-run/node\";\nimport { Link, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\nimport { getQueryIntParameter, getQueryStringParameter } from \"~/utils/params.server\";\nimport { PER_PAGE_OWN_QUESTIONNAIRES } from \"~/utils/constants\";\nimport { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\nimport { shareTwitterUrl } from \"~/utils/share\";\n\ntype LoaderTypeData = {\n    total: number;\n    offset: number;\n    hasPrev: boolean, \n    hasNext: boolean;\n    questionnaries: (Questionnaire & { category: Category })[];\n    search: string | null;\n    baseUrl: string;\n}\n\ntype FilterData = {\n    userId: string;\n    name?: {\n        contains: string\n    }\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n    const { userId } = await getAuth(request);\n    if(!userId){\n        return redirect(`${process.env.CLERK_REDIRECT_LOGIN!!}?redirect_url=${request.url}`);\n    }\n\n    const take = getQueryIntParameter(request, \"per_page\", PER_PAGE_OWN_QUESTIONNAIRES); \n    const skip = getQueryIntParameter(request, \"offset\", 0);\n    const search = getQueryStringParameter(request, \"search\");\n\n    const filter: FilterData = {\n        userId\n    };\n\n    if(search) {\n        filter.name = {\n            contains: search\n        };\n    }\n\n    const totalQuery =  db.questionnaire.count({\n        where: {\n            ...filter\n        }\n    });\n    \n    const questionnariesQuery = db.questionnaire.findMany({\n        skip,\n        take,\n        where: {\n            ...filter\n        },\n        orderBy: {\n            createdAt: \"desc\"\n        },\n        include: {\n            category: true\n        }\n    });\n\n    const [total, questionnaries] = await Promise.all([ totalQuery, questionnariesQuery ]);\n\n    const hasPrev = skip > 0;\n    const totalCurrent = skip + take;\n\n    const hasNext = totalCurrent < total ? true : false;\n\n    const baseUrl = process.env.BASE_URL;\n\n    return { total, questionnaries, offset: skip, hasPrev, hasNext, baseUrl };\n}\n\nexport default function QuestionnarieOwnerPage() {\n\n    const navigate = useNavigate();\n    const { questionnaries, hasPrev, hasNext, offset, search, baseUrl } = useLoaderData<LoaderTypeData>();\n    const [term, setTerm] = useState<string | null>(search);\n\n    useEffect(() => {\n        if(term === \"\") {\n            navigate(\"/questionnaire/owner\");\n        }\n    }, [term]);\n\n    const handleOnChageSearch = (event: ChangeEvent<HTMLInputElement>) => setTerm(event.target.value);\n\n    const handleOnSearch = (event: FormEvent) => {\n        event.preventDefault();\n        navigate(`/questionnaire/owner?search=${term}`);\n    }\n\n    const buildLinkPrev = () => {\n        if(offset === 0 && !term) {\n            return \"/questionnaire/owner\";\n        }\n\n        const params = new URLSearchParams();\n        const offserDiff = offset - PER_PAGE_OWN_QUESTIONNAIRES\n        if(offserDiff > 0) {\n            params.append(\"offset\", offserDiff.toString());\n        }\n\n        if(term) {\n            params.append(\"search\", term);\n        }\n\n        return `/questionnaire/owner?${params.toString()}`;\n    }\n\n    const buildLinkNext = () => {\n        const params = new URLSearchParams();\n\n        const nextOffset = offset + PER_PAGE_OWN_QUESTIONNAIRES;\n        params.append(\"offset\", nextOffset.toString());\n\n        if(term) {\n            params.append(\"search\", term);\n        }\n        \n        return `/questionnaire/owner?${params.toString()}`;\n    }\n\n    return (\n        <div className=\"container m-0 mx-auto\">\n            <div className=\"px-8\">\n                <div className=\"md:flex md:justify-between md:items-center\">\n                    <h1 className=\"mt-12 text-3xl mb-8 font-extrabold\">My Questionnaires</h1>\n                    <form onSubmit={handleOnSearch} className=\"mb-8 md:mb-0\">\n                        <label htmlFor=\"search\" className=\"mb-2 text-sm font-medium text-gray-900 sr-only\">Search</label>\n                        <div className=\"relative\">\n                            <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n                                <svg aria-hidden=\"true\" className=\"w-5 h-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                            </div>\n                            <input type=\"search\" id=\"search\" name=\"search\" className=\"block p-4 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Search...\" required onChange={handleOnChageSearch} />\n                            <button type=\"submit\" className=\"text-white absolute right-2.5 bottom-2.5 bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br font-medium rounded-lg text-sm px-4 py-2\">Search</button>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"overflow-x-auto relative\">\n                    <table className=\"w-full text-sm text-left text-gray-500\">\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                            <tr>\n                                <th scope=\"col\" className=\"py-3 px-6\">\n                                    Name\n                                </th>\n                                <th scope=\"col\" className=\"py-3 px-6\">\n                                    Category\n                                </th>\n                                <th scope=\"col\" className=\"py-3 px-6\">\n                                    Create At\n                                </th>\n                                <th scope=\"col\" className=\"py-3 px-6\">\n                                    Actions\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { questionnaries.length > 0 \n                                ? questionnaries.map(questionnarie => (\n                                    <tr key={questionnarie.id} className=\"bg-white border-b\">\n                                        <th scope=\"row\" className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap\">\n                                            {questionnarie.name}\n                                        </th>\n                                        <td className=\"py-4 px-6\">\n                                            {questionnarie.category.name}\n                                        </td>\n                                        <td className=\"py-4 px-6\">\n                                            {dayjs(questionnarie.createdAt).format(\"MMMM D, YYYY h:mm A\")}\n                                        </td>\n                                        <td className=\"py-4 px-6\">\n                                            <div className=\"flex\">\n                                                <Link to={`/questionnaire/edit/${questionnarie.id}`} className=\"relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white focus:ring-4 focus:outline-none focus:ring-purple-200\">\n                                                    <span className=\"relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                                                        Edit\n                                                    </span>\n                                                </Link>\n    \n                                                <a href={shareTwitterUrl(\"#TenTrueOrFalse I invite you to solve this quizz of only 10 questions \uD83D\uDCBF \\n\\n\", `${baseUrl}/questionnaire/resolved/${questionnarie.id}`)} target=\"_blank\" className=\"text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\">\n                                                    Tweet\n                                                </a>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))\n                                : <tr>\n                                    <td colSpan={4}>\n                                        <div className=\"flex justify-center mt-8\">\n                                            <div>\n                                                <figure>\n                                                    <img src=\"/img/empty.png\" alt=\"empty\" width=\"50\" />\n                                                </figure>\n                                                <p className=\"text-lg text-slate-600 font-light\">Empty</p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                \n                <div className=\"mt-8 flex gap-4 justify-between\">\n                    <Link to={buildLinkPrev()} className={`relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white focus:ring-4 focus:outline-none focus:ring-purple-200 disabled:opacity-50 disabled:pointer-events-none disabled:from-slate-300 disabled:to-slate-400 ${hasPrev ? \"\": \"pointer-events-none opacity-40 grayscale\"}`}>\n                        <span className=\"relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                            Previous\n                        </span>\n                    </Link>\n\n                    <Link to={buildLinkNext()} className={`relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white focus:ring-4 focus:outline-none focus:ring-purple-200 disabled:opacity-50 disabled:pointer-events-none disabled:from-slate-300 disabled:to-slate-400 ${hasNext ? \"\" : \"pointer-events-none opacity-40 grayscale\"}`}>\n                        <span className=\"relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                            Next\n                        </span>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}", "import { LoaderFunction } from \"@remix-run/node\";\nimport { PER_PAGE_CATEGORY_QUESTIONNAIRES } from \"~/utils/constants\";\nimport { db } from \"~/utils/db.server\";\nimport { getQueryIntParameter, getQueryStringParameter } from \"~/utils/params.server\";\n\ntype FilterData = {\n    active: boolean;\n    categoryId?: string;\n    name?: {\n        contains: string\n    }\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n    const take = getQueryIntParameter(request, \"per_page\", PER_PAGE_CATEGORY_QUESTIONNAIRES); \n    const skip = getQueryIntParameter(request, \"offset\", 0);\n    const search = getQueryStringParameter(request, \"search\");\n    const categoryId = getQueryStringParameter(request, \"category_id\");\n\n    const filter: FilterData = {\n        active: true\n    };\n\n    if(categoryId) {\n        filter.categoryId = categoryId;\n    }\n\n    if(search) {\n        filter.name = {\n            contains: search\n        }\n    }\n\n    const totalQuery = db.questionnaire.count({\n        where: {\n            ...filter\n        }\n    });\n\n    const questionnairesQuery = db.questionnaire.findMany({\n        skip,\n        take,\n        where: {\n            ...filter\n        },\n        orderBy: {\n            createdAt: \"desc\"\n        }\n    });\n\n    const [total, questionnaires] = await Promise.all([ totalQuery, questionnairesQuery ]);\n\n    return { take, skip, search, total, questionnaires };\n}", "import { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\nimport { Category, Questionnaire } from \"@prisma/client\";\nimport { LoaderFunction, redirect } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\nimport { CategoryQuestionnaireItem } from \"~/components/category/questionnaire-item\";\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport { PER_PAGE_CATEGORY_QUESTIONNAIRES } from \"~/utils/constants\";\nimport { QuestionnaireExtended } from \"~/types/questionnaire\";\nimport { generateQuestionnairesExt } from \"~/utils/questionnaire\";\n\ntype LoaderTypeData = {\n    category: Category;\n    slug: string;\n    userId: string | null; \n    resolved: string[];\n    baseUrl: string;\n}\n\ntype FetcherData = {\n    total: number;\n    search: string | null;\n    skip: number;\n    take: number;\n    questionnaires: Questionnaire[];\n}\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const { slug } = params;\n\n    const category = await db.category.findFirst({\n        where: { slug }\n    });\n\n    if(!category) {\n        return redirect(\"/404\");\n    }\n\n    const { userId } = await getAuth(request);\n\n    let resolved: string[] = [];\n    if(userId) {\n        const userResolved = await db.resolve.findMany({\n            where: {\n                userId\n            },\n            select: {\n                questionnaireId: true\n            }\n        });\n        resolved = userResolved.map(resolve => resolve.questionnaireId);\n    }\n   \n    const baseUrl = process.env.BASE_URL;\n\n    return { slug, category, userId, resolved, baseUrl };\n}\n\nexport default function CategoryPage() {\n\n    const { category, userId, resolved, baseUrl } = useLoaderData<LoaderTypeData>();\n    const [questionnaires, setQuestionnaires] = useState<QuestionnaireExtended[]>([]);\n    \n    const [offset, setOffset] = useState(0);\n    const [search, setSeach] = useState(\"\");\n    const { name, id: categoryId } = category;\n\n    const fetcher = useFetcher();\n\n    useEffect(() => load(), []);\n\n    useEffect(() => {\n        if(!fetcher.data) {\n            return;\n        }\n\n        const { skip, questionnaires: paginQuestionnaires } = fetcher.data as FetcherData;\n        if(skip === 0) {\n            setQuestionnaires(generateQuestionnairesExt(paginQuestionnaires, userId, resolved));\n        } else {\n            setQuestionnaires([...questionnaires, ...generateQuestionnairesExt(paginQuestionnaires, userId, resolved)]);\n        }\n    }, [fetcher.data]);\n\n    useEffect(() => {\n        if(search === \"\") {\n            obtaintWithResetOffset();\n        }\n    }, [search]);\n\n    const handleOnMore = () => {\n        const offsetMore = offset + PER_PAGE_CATEGORY_QUESTIONNAIRES;\n        load(offsetMore);\n        setOffset(offsetMore);\n    }\n\n    const handleOnChageSearch = (event: ChangeEvent<HTMLInputElement>) => setSeach(event.target.value);\n    \n    const handleOnSearch = (event: FormEvent) => {\n        event.preventDefault();\n        obtaintWithResetOffset();\n    }\n\n    const load = (currenOffset: number = 0) => {\n        const params = new URLSearchParams();\n        params.append(\"category_id\", categoryId);\n        params.append(\"offset\", currenOffset.toString());\n        params.append(\"search\", search);\n\n        fetcher.load(`/api/questionnaires?${params.toString()}`);\n    }\n\n    const obtaintWithResetOffset = () => {\n        const offsetReset = 0;\n        load(offsetReset);\n        setOffset(offsetReset);\n    }\n    \n    return (\n        <section className=\"container m-0 mx-auto\">\n            <div className=\"px-8\">\n                <div className=\"md:flex md:justify-between md:items-center\">\n                    <h1 className=\"mt-12 text-3xl mb-8 font-extrabold\">Category: {name}</h1>\n                    \n                    <form onSubmit={handleOnSearch} className=\"mb-8 md:mb-0\">\n                        <label htmlFor=\"search\" className=\"mb-2 text-sm font-medium text-gray-900 sr-only\">Search</label>\n                        <div className=\"relative\">\n                            <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n                                <svg aria-hidden=\"true\" className=\"w-5 h-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                            </div>\n                            <input type=\"search\" id=\"search\" name=\"search\" className=\"block p-4 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Search...\" required onChange={handleOnChageSearch} />\n                            <button type=\"submit\" className=\"text-white absolute right-2.5 bottom-2.5 bg-gradient-to-r from-pink-400 via-pink-500 to-pink-600 hover:bg-gradient-to-br font-medium rounded-lg text-sm px-4 py-2\">Search</button>\n                        </div>\n                    </form>\n                </div>\n                <div> \n                    <div className=\"overflow-x-auto relative\">\n                        <table className=\"w-full text-sm text-left text-gray-500\">\n                            <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                                <tr>\n                                    <th scope=\"col\" className=\"py-3 px-6\">\n                                        Questionnaire name\n                                    </th>\n                                    <th scope=\"col\" className=\"py-3 px-6\">\n                                        Actions\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                questionnaires.length > 0 \n                                ? questionnaires.map(questionnaire => (\n                                    <CategoryQuestionnaireItem key={questionnaire.id} questionnaire={questionnaire} baseUrl={baseUrl} />\n                                ))\n                                : <tr>\n                                    <td colSpan={2}>\n                                        <div className=\"flex justify-center mt-8\">\n                                            <div>\n                                                <figure>\n                                                    <img src=\"/img/empty.png\" alt=\"empty\" width=\"50\" />\n                                                </figure>\n                                                <p className=\"text-lg text-slate-600 font-light\">Empty</p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                  </tr>\n                            } \n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"mt-8\">\n                        { questionnaires.length < fetcher?.data?.total \n                            ? <button disabled={fetcher.state === \"submitting\"} type=\"submit\" onClick={handleOnMore} className=\"relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 group-hover:to-blue-500 hover:text-white focus:ring-4 focus:outline-none focus:ring-blue-300\">\n                                <span className=\"relative px-12 py-3.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                                    {fetcher.state === \"submitting\" ? \"Load more...\" : \"Load more\"} \n                                </span>\n                            </button>\n                            : null }\n                    </div> \n                </div>\n            </div>\n        </section>\n    );\n}", "import { Link } from \"react-router-dom\";\nimport { QuestionnaireExtended } from \"~/types/questionnaire\";\nimport { shareTwitterUrl } from \"~/utils/share\";\n\ntype Props = {\n    questionnaire: QuestionnaireExtended;\n    baseUrl: string;\n};\n\nexport function CategoryQuestionnaireItem({ questionnaire, baseUrl } : Props) {\n    const { name, id, isOwner, isResolved } = questionnaire;\n\n    const buildAction = () => {\n        if(isOwner) {\n            return (\n                <Link to={`/questionnaire/edit/${id}`} className=\"relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-red-200 via-red-300 to-yellow-200 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 focus:ring-4 focus:outline-none focus:ring-red-100\">\n                    <span className=\"relative px-7 py-3 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                        Edit\n                    </span>\n                </Link>\n            );\n        }\n\n        if(isResolved) {\n            return (\n                <Link to={`/questionnaire/view/${id}`} className=\"relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-red-200 via-red-300 to-yellow-200 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 focus:ring-4 focus:outline-none focus:ring-red-100\">\n                    <span className=\"relative px-7 py-3 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                        View\n                    </span>\n                </Link>\n            );\n        }\n\n        return (\n            <Link to={`/questionnaire/resolved/${id}`} className=\"relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white focus:ring-4 focus:outline-none focus:ring-purple-200\">\n                <span className=\"relative px-5 py-2.5 transition-all ease-in duration-75 bg-white rounded-md group-hover:bg-opacity-0\">\n                    Resolve\n                </span>\n            </Link> \n        );\n    }\n\n    return (\n        <tr className=\"bg-white border-b\">\n            <th scope=\"row\" className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap\">\n                {name}\n            </th>\n            <td className=\"py-4 px-6\">\n                {buildAction()}\n\n                <a href={shareTwitterUrl(\"#TenTrueOrFalse I invite you to solve this quizz of only 10 questions \uD83D\uDCBF \\n\\n\", `${baseUrl}/questionnaire/resolved/${id}`)} target=\"_blank\" className=\"text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 font-medium rounded-lg text-sm px-7 py-3.5 text-center mr-4 mb-2 inline-block\">\n                    Tweet\n                </a>\n            </td>\n        </tr>\n    );\n}", "import { Questionnaire } from \"@prisma/client\";\nimport { QuestionnaireExtended } from \"~/types/questionnaire\";\n\nexport function generateQuestionnairesExt(questionnaires: Questionnaire[], userId: string | null, resolved: string[]): QuestionnaireExtended[] {\n    return questionnaires.map(item => {\n        const isOwner = userId === item.userId;\n        const isResolved = resolved.includes(item.id); \n        return {...item, isOwner, isResolved};\n    });\n}", "import { SignIn } from \"@clerk/remix\";\n\nexport default function SignInPage() {\n  return (\n    <div style={{ border: \"2px solid blue\", padding: \"2rem\" }}>\n      <h1>Sign In route</h1>\n      <SignIn routing={\"path\"} path={\"/sign-in\"} />\n    </div>\n  );\n}", "import { SignUp } from \"@clerk/remix\";\n\nexport default function SignUpPage() {\n  return (\n    <div style={{ border: \"2px solid blue\", padding: \"2rem\" }}>\n      <h1>Sign Up route</h1>\n      <SignUp routing={\"path\"} path={\"/sign-up\"} />\n    </div>\n  );\n}", "import { SignedIn, SignedOut } from \"@clerk/remix\";\nimport { Category } from \"@prisma/client\";\nimport { LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { HomeIn } from \"~/components/home/home-in\";\nimport { HomeOut } from \"~/components/home/home-out\";\nimport { db } from \"~/utils/db.server\";\n\ntype LoaderTypeData = {\n  categories: Category[];\n  baseUrl: string;\n}\n\nexport const loader: LoaderFunction = async () => {\n  const categories = await db.category.findMany();\n  return { categories }\n}\n\nexport default function Index() {\n  const { categories } = useLoaderData<LoaderTypeData>();\n  return (\n    <>\n      <SignedIn>\n        <HomeIn categories={categories} />\n      </SignedIn>\n      \n      <SignedOut>\n        <HomeOut />\n      </SignedOut>\n    </>\n  );\n}\n", "import { Category } from \"@prisma/client\"\nimport { Link } from \"@remix-run/react\";\nimport { getGradientColor } from \"~/utils/gradient\";\n\ntype Props = {\n    categories: Category[]\n}\n\nexport function CategoryExplorer({ categories }: Props) {\n    return (\n        <section className=\"my-8\">\n            <h4 className=\"font-bold text-2xl mb-8\">Explorer categories</h4>\n            <ul className=\"md:grid grid-cols-3 gap-8\">\n                { categories.map(({ id, name, slug }, index) => (\n                    <li key={id}>\n                        <Link to={`/category/${slug}`} className={`text-white text-xl font-semibold py-16 flex justify-center items-center mb-8 rounded md:mb-0 md:text-2xl ${getGradientColor(index)}`}>\n                            {name}\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n}", "const gradients = [\n    \"bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500\",\n    \"bg-gradient-to-r from-green-400 via-blue-600 to-purple-700\",\n    \"bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-500\",\n    \"bg-gradient-to-r from-indigo-400 via-red-400 to-yellow-300\",\n    \"bg-gradient-to-r from-yellow-300 via-yellow-600 to-yellow-700\",\n    \"bg-gradient-to-r from-blue-700 via-blue-800 to-gray-900\",\n    \"bg-gradient-to-r from-green-400 via-green-600 to-purple-700\",\n    \"bg-gradient-to-r from-rose-400 via-fuchsia-600 to-indigo-600\",\n    \"bg-gradient-to-r from-yellow-300 via-pink-400 to-pink-600\"\n]\n\nexport function getGradientColor(index: number): string {\n    const total = gradients.length;\n\n    if(index < total) {\n        return gradients[index];\n    }\n    \n    const divider = index / total;\n    const range = index / divider;\n    return gradients[range - 2];\n}", "import { useNavigate } from \"@remix-run/react\";\nimport { useState, useEffect } from \"react\";\nimport type { FormEvent, InputEvent } from \"~/types/event\";\n\nexport function CreateForm() {\n\n    const [name, setName] = useState('');\n    const [path, setPath] = useState('');\n\n    useEffect(() => {\n        setPath(`/questionnaire/create?questionnarie=${name}`);\n    }, [name]);\n\n    const navigate = useNavigate();\n\n    const handleOnChangeName = (event: InputEvent) => setName(event.target.value);\n\n    const handleOnCreate = (event: FormEvent) => {\n        event.preventDefault();\n        navigate(path);\n    }\n\n    return (\n        <section>\n            <p className=\"text-3xl font-extrabold\">Create a new quiz easily</p>\n            <form onSubmit={handleOnCreate} className=\"mb-4 mt-4 flex gap-4 items-center\">\n                <input value={name} onChange={handleOnChangeName} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"name of quiz\" />\n                <button type=\"submit\" className=\"text-white bg-gradient-to-r from-purple-500 to-pink-500 hover:bg-gradient-to-l focus:ring-4 focus:outline-none focus:ring-purple-200 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-4 py-2.5 text-center mr-2 mb-2\">Create</button>\n            </form>\n        </section>\n    );\n}", "import { Link } from \"@remix-run/react\";\n\nexport function MyQuestionnaires() {\n    return (\n        <div className=\"flex justify-end gap-3\">\n            <Link to=\"/questionnaire/owner\" className=\"text-slate-800 underline hover:opacity-80\">\n                My Questionnaires\n            </Link>\n            <span>|</span>\n            <Link to=\"/questionnaire/resolved/\" className=\"text-slate-800 underline hover:opacity-80\">\n                My Resolved\n            </Link>\n        </div>\n    );\n}", "import { Category } from \"@prisma/client\";\nimport { CategoryExplorer } from \"../category/explorer\";\nimport { CreateForm } from \"./create-form\";\nimport { MyQuestionnaires } from \"./my-questionnaires\";\n\ntype Props = {\n    categories: Category[];\n}\n\nexport function HomeIn({ categories }: Props) {\n    return (\n        <div className=\"container m-0 mx-auto\">\n            <div className=\"px-8\">\n                <MyQuestionnaires />\n                <CreateForm />\n                <CategoryExplorer categories={categories} />\n            </div>\n        </div>\n    );\n}", "import { Link } from \"@remix-run/react\";\nimport { Wave } from \"../shared/wave\";\n\nexport function HomeOut() {\n    return (\n        <>\n            <section className=\"container m-0 mx-auto p-8 md:p-8\">\n                <h1 className=\"text-6xl text-zinc-900 font-extrabold md:text-8xl\"><span className=\"text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600\">Ten True or False</span> the new age questions for developers</h1>\n                <p className=\"mt-8 text-2xl text-gray-600 font-extralight md:text-3xl md:w-9/12 md:mt-12\">Create easily and simply questionnaires that help other developers to improve their knowledge and share your results with others</p>\n                <div className=\"mt-8 flex flex-col justify-center gap-4 md:flex-row md:justify-start md:w-9/12\">\n\n                    <div className=\"flex gap-4 md:flex-col\">\n                        <img src=\"/img/short.png\" alt=\"ten questions\" width=\"70\"/>\n                        <div className=\"mt-2\">\n                            <h4 className=\"text-lg\">Short Questionnaires</h4>\n                            <p className=\"text-gray-500 font-light\">Just in ten questions test your knowledge</p>\n                        </div>\n                    </div>\n\n                    <div className=\"flex gap-4 md:flex-col\">\n                        <img src=\"/img/sharew.png\" alt=\"ten questions\" width=\"70\" />\n                        <div className=\"mt-2\">\n                            <h4 className=\"text-lg\">Share with the world</h4>\n                            <p className=\"text-gray-500 font-light\">Questionnaires that other programmers take can solve them</p>\n                        </div>\n                    </div>\n\n                    <div className=\"flex gap-4 md:flex-col\">\n                        <img src=\"/img/day.png\" alt=\"ten questions\" width=\"70\" />\n                        <div className=\"mt-2\">\n                            <h4 className=\"text-lg\">Stay up to date</h4>\n                            <p className=\"text-gray-500 font-light\">Continuously find new quizzes that improve your level</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-8 flex gap-4\">\n                    <Link to=\"/sign-up\" className=\"text-white bg-gradient-to-r from-purple-500 to-pink-500 hover:bg-gradient-to-l focus:ring-4 focus:outline-none focus:ring-purple-200 dark:focus:ring-purple-800 font-medium rounded-lg text-xl px-5 py-2.5 text-center mr-2 mb-2 md:px-12 md:py-5\">Get starter</Link>\n                    <Link to=\"/about\" className=\"text-black hover:text-zinc-800 border border-black hover:bg-zinc-50 focus:ring-4 focus:outline-none focus:ring-zinc-700 font-medium rounded-lg text-xl px-5 py-2.5 text-center mr-2 mb-2 md:px-12 md:py-5\">About us</Link>\n                </div>\n            </section>\n            <section>\n                <Wave />\n                <div className=\"bg-gray-100\">\n                    <div className=\"container m-0 mx-auto p-8 md:p-8\">\n                        <h2 className=\"text-2xl md:text-5xl font-extrabold mb-8 md:mb-0\">Only 10 questions</h2>\n                        <div className=\"md:flex md:gap-4\">\n                            <figure className=\"flex-1 md:p-8 mb-4 md:mb-0\">\n                                <img src=\"/img/categories.png\" alt=\"categories\" className=\"max-w-full border-white border-solid border-8 rounded\" />\n                            </figure>\n                            <div className=\"flex-1 md:p-8 font-extralight text-xl\">\n                                <p className=\"mb-4\">With a few minutes a day solving only 10 questions per quiz raise your level as a programmer.</p>\n                                <p>Challenge your knowledge with quizzes in different categories, fronted, backed, devops, mobile and many more.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Wave type=\"invert\" />\n            </section>\n\n            <section className=\"container m-0 mx-auto p-8 md:p-8\">\n                <h2 className=\"text-2xl md:text-5xl font-extrabold mb-8 md:mb-0\">Perfect Score!</h2>\n                <div className=\"flex\">\n                    <div className=\"flex-1 md:p-8 font-extralight text-xl\">\n                        <p className=\"mb-4\">\n                            Challenge yourself to achieve the perfect answers every day in the quizzes.\n                        </p>\n                        <p>\n                            Improve your score every day, and review the history of the quizzes you are solving.\n                        </p>\n                    </div>\n                    <figure className=\"p-8 flex-1\">\n                        <img src=\"/img/score.png\" alt=\"perfect\" className=\"max-w-full border-gray-100 border-solid border-8 rounded-xl\" />\n                    </figure>\n                </div>\n            </section>\n\n            <section>\n                <Wave />\n                <div className=\"bg-gray-100\">\n                    <div className=\"container m-0 mx-auto p-8 md:p-8\">\n                        <h2 className=\"text-2xl md:text-5xl font-extrabold mb-8 md:mb-0\">True Or False</h2>\n                        <div className=\"md:flex md:gap-4\">\n                            <figure className=\"flex-1 md:p-8 mb-4 md:mb-0\">\n                                <img src=\"/img/questions.png\" alt=\"questions\" className=\"max-w-full border-white border-solid border-8 rounded\" />\n                            </figure>\n                            <div className=\"flex-1 md:p-8 font-extralight text-xl\">\n                                <p className=\"mb-4\">It is combined that the fewer options it is easier to say, all the quizzes the answers are true or false</p>\n                                <p>The fun of these challenges is if the answers are a combination of true/false or all the answers are true or all the answers are false, they will test your knowledge.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Wave type=\"invert\" />\n            </section>\n\n\n            <section className=\"container m-0 mx-auto p-8 md:p-8\">\n                <h2 className=\"text-2xl md:text-5xl font-extrabold mb-8 md:mb-0\">Share on Twitter</h2>\n                <div className=\"flex\">\n                    <div className=\"flex-1 md:p-8 font-extralight text-xl\">\n                        <p className=\"mb-4\">\n                            Show through a tweet the quiz you have created with your followers so they can solve it\n                        </p>\n                        <p>\n                            You can also share the questionnaires of other categories on the platform and the results obtained through a tweet\n                        </p>\n                    </div>\n                    <figure className=\"p-8 flex-1\">\n                        <img src=\"/img/tweet.png\" alt=\"perfect\" className=\"max-w-full border-gray-100 border-solid border-8 rounded-xl\" />\n                    </figure>\n                </div>\n            </section>\n        </>\n    );\n}", "type WaveType = \"normal\" | \"invert\";\n\ntype Props = {\n    type?: WaveType\n}\n\nexport function Wave({ type = \"normal\"}: Props) {\n    return (\n        <div className={`${type === \"normal\" ? \"bg-gray-100\" : \"bg-white\"} overflow-hidden`}>\n            <svg preserveAspectRatio=\"none\" viewBox=\"0 0 1200 120\" xmlns=\"http://www.w3.org/2000/svg\" fill={type === \"normal\" ? \"#FFF\" : \"#F3F4F6\"} className=\"h-10 w-150\"><path d=\"M321.39 56.44c58-10.79 114.16-30.13 172-41.86 82.39-16.72 168.19-17.73 250.45-.39C823.78 31 906.67 72 985.66 92.83c70.05 18.48 146.53 26.09 214.34 3V0H0v27.35a600.21 600.21 0 00321.39 29.09z\"></path></svg>\n        </div>\n    );\n}", "import { UserProfile } from \"@clerk/remix\";\nimport { Navbar } from \"~/components/navbar\";\n\nexport default function MePage() {\n  return (\n    <div className=\"mt-20\">\n      <Navbar />\n      <UserProfile />\n    </div>\n  );\n}", "export default function NotFound() {\n    return (\n        <div className=\"container m-0 mx-auto\">\n            <div className=\"px-8\">\n                <h1>Not found</h1>\n            </div>\n        </div>\n    );\n}", "export default {'version':'f8d63e3d','entry':{'module':'/build/entry.client-UI52GWGX.js','imports':['/build/_shared/chunk-EEMW7LQ2.js','/build/_shared/chunk-BNRLY3XL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-QNPXZOJA.js','imports':['/build/_shared/chunk-VSTSINXQ.js','/build/_shared/chunk-G3QIDN43.js','/build/_shared/chunk-A563IWXS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/404':{'id':'routes/404','parentId':'root','path':'404','index':undefined,'caseSensitive':undefined,'module':'/build/routes/404-TJPSGBUX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/questionnaires':{'id':'routes/api/questionnaires','parentId':'root','path':'api/questionnaires','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/questionnaires-TPEOKUXR.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/category/$slug':{'id':'routes/category/$slug','parentId':'root','path':'category/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/category/$slug-RNLI4X5K.js','imports':['/build/_shared/chunk-5MLM22RV.js','/build/_shared/chunk-QO2DFU26.js','/build/_shared/chunk-SY7IAUC4.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-KJ4XDA5Q.js','imports':['/build/_shared/chunk-SY7IAUC4.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/me/$':{'id':'routes/me/$','parentId':'root','path':'me/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/me/$-4G3OFD4T.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/questionnaire/create':{'id':'routes/questionnaire/create','parentId':'root','path':'questionnaire/create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/questionnaire/create-XRUAMB5Q.js','imports':['/build/_shared/chunk-SY7IAUC4.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/questionnaire/edit/$questionnaireId':{'id':'routes/questionnaire/edit/$questionnaireId','parentId':'root','path':'questionnaire/edit/:questionnaireId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/questionnaire/edit/$questionnaireId-EWZ64KNU.js','imports':['/build/_shared/chunk-SY7IAUC4.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/questionnaire/owner':{'id':'routes/questionnaire/owner','parentId':'root','path':'questionnaire/owner','index':undefined,'caseSensitive':undefined,'module':'/build/routes/questionnaire/owner-VXVPTVWT.js','imports':['/build/_shared/chunk-3VJDMFEJ.js','/build/_shared/chunk-5MLM22RV.js','/build/_shared/chunk-7DIR46HH.js','/build/_shared/chunk-QO2DFU26.js','/build/_shared/chunk-SY7IAUC4.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/questionnaire/resolved/$questionnaireId':{'id':'routes/questionnaire/resolved/$questionnaireId','parentId':'root','path':'questionnaire/resolved/:questionnaireId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/questionnaire/resolved/$questionnaireId-5SA4JOGO.js','imports':['/build/_shared/chunk-SY7IAUC4.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/questionnaire/resolved/index':{'id':'routes/questionnaire/resolved/index','parentId':'root','path':'questionnaire/resolved','index':true,'caseSensitive':undefined,'module':'/build/routes/questionnaire/resolved/index-6P6CS4WK.js','imports':['/build/_shared/chunk-3VJDMFEJ.js','/build/_shared/chunk-5MLM22RV.js','/build/_shared/chunk-7DIR46HH.js','/build/_shared/chunk-QO2DFU26.js','/build/_shared/chunk-SY7IAUC4.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/questionnaire/view/$questionnaireId':{'id':'routes/questionnaire/view/$questionnaireId','parentId':'root','path':'questionnaire/view/:questionnaireId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/questionnaire/view/$questionnaireId-37QR6AZT.js','imports':['/build/_shared/chunk-7DIR46HH.js','/build/_shared/chunk-QO2DFU26.js','/build/_shared/chunk-SY7IAUC4.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in/$':{'id':'routes/sign-in/$','parentId':'root','path':'sign-in/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in/$-DWLJKACQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/$':{'id':'routes/sign-up/$','parentId':'root','path':'sign-up/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up/$-UBHR2C3H.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-F8D63E3D.js'};", "\nimport * as entryServer from \"/Users/andres/Documents/Github/ttf/app/entry.server.tsx\";\nimport * as route0 from \"/Users/andres/Documents/Github/ttf/app/root.tsx\";\nimport * as route1 from \"/Users/andres/Documents/Github/ttf/app/routes/questionnaire/resolved/$questionnaireId.tsx\";\nimport * as route2 from \"/Users/andres/Documents/Github/ttf/app/routes/questionnaire/edit/$questionnaireId.tsx\";\nimport * as route3 from \"/Users/andres/Documents/Github/ttf/app/routes/questionnaire/view/$questionnaireId.tsx\";\nimport * as route4 from \"/Users/andres/Documents/Github/ttf/app/routes/questionnaire/resolved/index.tsx\";\nimport * as route5 from \"/Users/andres/Documents/Github/ttf/app/routes/questionnaire/create.tsx\";\nimport * as route6 from \"/Users/andres/Documents/Github/ttf/app/routes/questionnaire/owner.tsx\";\nimport * as route7 from \"/Users/andres/Documents/Github/ttf/app/routes/api/questionnaires.ts\";\nimport * as route8 from \"/Users/andres/Documents/Github/ttf/app/routes/category/$slug.tsx\";\nimport * as route9 from \"/Users/andres/Documents/Github/ttf/app/routes/sign-in/$.tsx\";\nimport * as route10 from \"/Users/andres/Documents/Github/ttf/app/routes/sign-up/$.tsx\";\nimport * as route11 from \"/Users/andres/Documents/Github/ttf/app/routes/index.tsx\";\nimport * as route12 from \"/Users/andres/Documents/Github/ttf/app/routes/me/$.tsx\";\nimport * as route13 from \"/Users/andres/Documents/Github/ttf/app/routes/404.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/questionnaire/resolved/$questionnaireId\": {\n      id: \"routes/questionnaire/resolved/$questionnaireId\",\n      parentId: \"root\",\n      path: \"questionnaire/resolved/:questionnaireId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/questionnaire/edit/$questionnaireId\": {\n      id: \"routes/questionnaire/edit/$questionnaireId\",\n      parentId: \"root\",\n      path: \"questionnaire/edit/:questionnaireId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/questionnaire/view/$questionnaireId\": {\n      id: \"routes/questionnaire/view/$questionnaireId\",\n      parentId: \"root\",\n      path: \"questionnaire/view/:questionnaireId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/questionnaire/resolved/index\": {\n      id: \"routes/questionnaire/resolved/index\",\n      parentId: \"root\",\n      path: \"questionnaire/resolved\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/questionnaire/create\": {\n      id: \"routes/questionnaire/create\",\n      parentId: \"root\",\n      path: \"questionnaire/create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/questionnaire/owner\": {\n      id: \"routes/questionnaire/owner\",\n      parentId: \"root\",\n      path: \"questionnaire/owner\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/api/questionnaires\": {\n      id: \"routes/api/questionnaires\",\n      parentId: \"root\",\n      path: \"api/questionnaires\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/category/$slug\": {\n      id: \"routes/category/$slug\",\n      parentId: \"root\",\n      path: \"category/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/sign-in/$\": {\n      id: \"routes/sign-in/$\",\n      parentId: \"root\",\n      path: \"sign-in/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/sign-up/$\": {\n      id: \"routes/sign-up/$\",\n      parentId: \"root\",\n      path: \"sign-up/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/me/$\": {\n      id: \"routes/me/$\",\n      parentId: \"root\",\n      path: \"me/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/404\": {\n      id: \"routes/404\",\n      parentId: \"root\",\n      path: \"404\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AACA,mBAA4B,6BAC5B,gBAA+B;AAEhB,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,yBAAgB,IAAI,gBAAgB,cAE7B,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAOO,6BAEP,aAA+B,oCAC/B,gBAAyB,yBACzB,gBAAmC;;;;;;ACZnC,mBAA+C,yBAE/C,gBAAqB,6BACrB,gBAAyB;AAGlB,kBAAkB;AAErB,MAAM,EAAE,YAAY,8BACd,CAAC,YAAY,iBAAiB,4BAAS;AAU7C,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KACL,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAgB,KAAI;AAAA,IAAO,WAAU;AAAA,OAGlD,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KACL,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAY,sBAGpC,oCAAC,uBAAD,MACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,IAAK,WAAU;AAAA,KAAiB,WACzC,oCAAC,UAAD;AAAA,IAAQ,UAAU;AAAA,IAAY,SAtBlB,YAAY;AACpC,oBAAc,KACd,MAAM,WACN,cAAc,KACd,OAAO,SAAS,OAAO;AAAA;AAAA,IAkBiD,WAAU;AAAA,KAA8I,eAG5N,oCAAC,wBAAD,MACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,IAAU,WAAU;AAAA,KAAiB,YAC9C,oCAAC,oBAAD;AAAA,IAAM,WAAU;AAAA,IAAyG,IAAG;AAAA,KAAU;AAAA;;;ACvCnJ,kBAAkB;AACrB,SACI,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KACd,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAA6B,QAAS,UACtD,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAgB,cAClB,oCAAC,KAAD;AAAA,IAAG,MAAK;AAAA,IAAwB,QAAO;AAAA,IAAS,WAAU;AAAA,KAA0B,gBAAe,OAAG,oCAAC,KAAD;AAAA,IAAG,MAAK;AAAA,IAA2B,QAAO;AAAA,IAAS,WAAU;AAAA,KAA4B,aAAY,KAAC,oCAAC,KAAD;AAAA,IAAG,MAAK;AAAA,IAAsD,QAAO;AAAA,IAAS,WAAU;AAAA,KAA4B,eAE9U,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACZ,oCAAC,KAAD;AAAA,IAAG,MAAK;AAAA,IAAsC,QAAO;AAAA,IAAS,WAAU;AAAA,KACpE,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAmB,KAAI;AAAA,IAAU,OAAM;AAAA,OAEpD,oCAAC,KAAD;AAAA,IAAG,MAAK;AAAA,IAAuC,QAAO;AAAA,IAAS,WAAU;AAAA,KACrE,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAkB,KAAI;AAAA,IAAS,OAAM;AAAA;AAAA;;;AFM3D,IAAM,gBAAgB,yCAEhB,SAAyB,CAAC,SAAS,+BAAe;AAGxD,iBAAiB;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAI9B,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAIZ,eAAe;AACb,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAEF,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,QAAD,OACA,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,sBAAD,QAEF,oCAAC,QAAD,OACA,oCAAC,iCAAD,OACA,oCAAC,uBAAD,OACA,oCAAC,0BAAD;AAAA;AAMR,IAAO,eAAQ,4BAAS;;;AGxDxB;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,oBAA6B,2BAEzB;AAYF,AAAK,OAAO,QACV,QAAO,OAAO,IAAI,+BAEpB,KAAK,OAAO;;;ADhBd,kBAAwB,oCAExB,cAAyD,4BACzD,gBAA+E,6BAYlE,UAAyB,OAAO,EAAE,SAAS,aAAa;AACjE,MAAM,EAAE,WAAW,MAAM,yBAAQ;AACjC,MAAG,CAAC;AACA,WAAO,0BAAS,GAAG,QAAQ,IAAI,qCAAuC,QAAQ;AAGlF,MAAM,EAAE,oBAAoB;AAS5B,MAPqB,MAAM,GAAG,QAAQ,UAAU;AAAA,IAC5C,OAAO;AAAA,MACH;AAAA,MACA;AAAA;AAAA;AAKJ,WAAO,0BAAS,uBAAuB;AAG3C,MAAM,gBAAgB,MAAM,GAAG,cAAc,UAAU;AAAA,IACnD,OAAO;AAAA,MACH,IAAI;AAAA;AAAA,IAER,SAAS;AAAA,MACL,WAAW;AAAA,QACP,SAAS;AAAA,UACL,MAAM;AAAA;AAAA;AAAA;AAAA;AAMtB,SAAI,gBAID,cAAc,WAAW,SACjB,0BAAS,uBAAuB,cAAc,QAGlD,EAAE,kBAPE,0BAAS;AAAA,GAWX,SAAyB,OAAO,EAAE,SAAS,aAAa;AACjE,MAAM,EAAE,WAAW,MAAM,yBAAQ;AACjC,MAAG,CAAC;AACA,WAAO,0BAAS,GAAG,QAAQ,IAAI,qCAAuC,QAAQ;AAGlF,MAAM,EAAE,oBAAoB;AAC5B,UAAQ,IAAI,eAAe;AAC3B,MAAM,gBAAgB,MAAM,GAAG,cAAc,UAAU;AAAA,IACnD,OAAO;AAAA,MACH,IAAI;AAAA;AAAA,IAER,SAAS;AAAA,MACL,WAAW;AAAA,QACP,SAAS;AAAA,UACL,MAAM;AAAA;AAAA;AAAA;AAAA;AAMtB,MAAG,CAAC;AACA,WAAO,0BAAS;AAGpB,MAAM,EAAE,cAAc,eAChB,WAAW,MAAM,QAAQ,YAEzB,cAAc,UAAU,IAAI,cAAY;AAC1C,QAAM,EAAE,SAAS,UACX,QAAQ,SAAS,IAAI,GAAG,mBAAmB,QAC3C,YAAY,SAAS,WAAW;AAEtC,WAAO,EAAE,MAAM,OAAO;AAAA,MAGpB,QAAQ,YAAY,OAAO,CAAC,EAAE,gBAAgB,WAAW,QAEzD,UAAU,MAAM,GAAG,QAAQ,OAAO;AAAA,IACpC,MAAM;AAAA,MACF;AAAA,MACA,iBAAiB,cAAc;AAAA,MAC/B;AAAA;AAAA,MAIF,EAAE,IAAI,cAAc,SACpB,UAAU,YAAY,IAAI,YAAW,iBAAE,aAAc;AAE3D,eAAM,GAAG,OAAO,WAAW;AAAA,IACvB,MAAM;AAAA,MAGH,EAAE,OAAO;AAAA;AAGL,qCAAqC;AAChD,MAAM,EAAE,kBAAkB,oCACpB,OAAO;AACb,UAAQ,IAAI,QAAQ;AAEpB,MAAM,EAAE,MAAM,WAAW,OAAO,eAC1B,EAAE,UAAU,oCACZ,WAAW;AAEjB,SACI,0DACI,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,oBAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAE1B,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,IAAwD,SAAQ;AAAA,KAC5E,OAID,UAAU,IAAI,CAAC,EAAE,SAAI,aAAM,kBACnB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAA2E,KAAK;AAAA,KAC3F,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,IAAgD,SAAS,GAAG;AAAA,KACxE,cAGL,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD,MACI,oCAAC,SAAD;AAAA,IAAO,UAAQ;AAAA,IAAC,IAAI,GAAG;AAAA,IAAoB,OAAM;AAAA,IAAO,MAAM,GAAG;AAAA,IAAe,MAAK;AAAA,IAAQ,WAAU;AAAA,MACvG,oCAAC,SAAD;AAAA,IAAO,SAAS,GAAG;AAAA,IAAoB,WAAU;AAAA,KAAmR,UAKxU,oCAAC,OAAD,MACI,oCAAC,SAAD;AAAA,IAAO,UAAQ;AAAA,IAAC,IAAI,GAAG;AAAA,IAAqB,OAAM;AAAA,IAAQ,MAAM,GAAG;AAAA,IAAe,MAAK;AAAA,IAAQ,WAAU;AAAA,MACzG,oCAAC,SAAD;AAAA,IAAO,SAAS,GAAG;AAAA,IAAqB,WAAU;AAAA,KAAkR,cAS5V,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,UAAD;AAAA,IAAQ,UAAU,UAAU;AAAA,IAAc,MAAK;AAAA,IAAS,WAAU;AAAA,KAC9D,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAoH,YACvH,UAAU,eAAe,SAAS;AAAA;;;AEpK/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB,oCAExB,eAAyD,4BACzD,gBAAmD;AAS5C,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AAEjE,MAAM,EAAE,WAAW,MAAM,yBAAQ;AACjC,MAAG,CAAC;AACA,WAAO,2BAAS,GAAG,QAAQ,IAAI,qCAAuC,QAAQ;AAGlF,MAAM,EAAE,oBAAoB,QAEtB,gBAAgB,MAAM,GAAG,cAAc,UAAU;AAAA,IACnD,OAAO;AAAA,MACH,IAAI;AAAA;AAAA,IAER,SAAS;AAAA,MACL,WAAW;AAAA,QACP,SAAS;AAAA,UACL,MAAM;AAAA;AAAA;AAAA;AAAA;AAMtB,MAAG,kBAAkB;AACjB,WAAO,2BAAS;AAGpB,MAAG,gDAAe,YAAW;AACzB,WAAO,2BAAS;AAGpB,MAAM,aAAa,MAAM,GAAG,SAAS;AACrC,SAAO,EAAE,eAAe;AAAA,GAGf,UAAyB,OAAO,EAAE,SAAS,aAAa;AA9CrE;AA+CI,MAAM,EAAE,WAAW,MAAM,yBAAQ;AACjC,MAAG,CAAC;AACA,WAAO,2BAAS,GAAG,QAAQ,IAAI,qCAAuC,QAAQ;AAGlF,MAAM,EAAE,oBAAoB,QAEtB,gBAAgB,MAAM,GAAG,cAAc,UAAU;AAAA,IACnD,OAAO;AAAA,MACH,IAAI;AAAA;AAAA,IAER,SAAS;AAAA,MACL,WAAW;AAAA;AAAA;AAInB,MAAG,kBAAkB;AACjB,WAAO,2BAAS;AAGpB,MAAG,gDAAe,YAAW;AACzB,WAAO,2BAAS;AAGpB,MAAM,WAAW,MAAM,QAAQ,YACzB,OAAO,gBAAS,IAAI,YAAb,mBAAsB,eAAc,IAC3C,aAAa,gBAAS,IAAI,kBAAb,mBAA4B,eAAc,IACvD,EAAG,cAAc;AAEvB,QAAM,GAAG,cAAc,OAAO;AAAA,IAC1B,OAAO;AAAA,MACH,IAAI;AAAA;AAAA,IAER,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAIR,MAAM,sBAAsB,UAAU,IAAI,cAAY;AAvF1D;AAwFQ,QAAM,EAAE,IAAI,gBAAS,UACf,cAAc,iBAAS,IAAI,GAAG,yBAAhB,oBAAqC,eAAc,IACjE,SAAS,SAAS,IAAI,GAAG,oBAAmB;AAElD,WAAO,GAAG,SAAS,OAAO;AAAA,MACtB,OAAO;AAAA,QACH;AAAA;AAAA,MAEJ,MAAM;AAAA,QACF;AAAA,QACA;AAAA;AAAA;AAAA;AAKZ,eAAM,QAAQ,IAAI,sBAEX,2BAAS;AAAA;AAIL,6BAA6B;AAExC,MAAM,EAAE,UAAU,oCACZ,EAAE,eAAe,eAAe,oCAEhC,EAAE,MAAM,WAAW,eAAe;AAExC,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAEX,oCAAC,oBAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAEtB,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,IAAwD,SAAQ;AAAA,KAAO,uBAGxF,oCAAC,SAAD;AAAA,IAAO,cAAc;AAAA,IAAM,UAAQ;AAAA,IAAC,WAAU;AAAA,IAA6H,IAAG;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAO,aAAY;AAAA,MAEzN,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAO,qHAEpB,oCAAC,OAAD,MACI,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,IAAa,WAAU;AAAA,KAA6C,aACnF,oCAAC,UAAD;AAAA,IAAQ,UAAQ;AAAA,IAAC,cAAc;AAAA,IAAY,MAAK;AAAA,IAAa,IAAG;AAAA,IAAa,WAAU;AAAA,KACnF,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAG,0BACf,WAAW,IAAI,CAAC,EAAE,IAAI,kBACpB,oCAAC,UAAD;AAAA,IAAQ,KAAK;AAAA,IAAI,OAAO;AAAA,KAAK,WAMrC,UAAU,IAAI,CAAC,EAAE,IAAI,aAAM,QAAQ,kBAAkB;AACjD,QAAM,mBAAmB,SAAS,MAAK,MAAM,KAAK,IAAI;AACtD,WAEQ,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,MAA6D,KAAK;AAAA,OAC7E,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACX,oCAAC,SAAD;AAAA,MAAO,WAAU;AAAA,MAA6C,SAAS,GAAG;AAAA,OAAoB,aAChF,mBAEd,oCAAC,SAAD;AAAA,MAAO,cAAc;AAAA,MAAa,UAAQ;AAAA,MAAC,WAAU;AAAA,MAA6H,IAAI,GAAG;AAAA,MAAoB,MAAM,GAAG;AAAA,MAAoB,MAAK;AAAA,MAAO,aAAa,YAAY;AAAA,SAGnR,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACX,oCAAC,OAAD,MACI,oCAAC,SAAD;AAAA,MAAO,IAAI,GAAG;AAAA,MAAoB,gBAAgB,WAAW;AAAA,MAAM,OAAM;AAAA,MAAO,MAAM,GAAG;AAAA,MAAe,MAAK;AAAA,MAAQ,WAAU;AAAA,QAC/H,oCAAC,SAAD;AAAA,MAAO,SAAS,GAAG;AAAA,MAAoB,WAAU;AAAA,OAA0Q,UAK/T,oCAAC,OAAD,MACI,oCAAC,SAAD;AAAA,MAAO,IAAI,GAAG;AAAA,MAAqB,gBAAgB,WAAW;AAAA,MAAO,OAAM;AAAA,MAAQ,MAAM,GAAG;AAAA,MAAe,MAAK;AAAA,MAAQ,WAAU;AAAA,QAClI,oCAAC,SAAD;AAAA,MAAO,SAAS,GAAG;AAAA,MAAqB,WAAU;AAAA,OAA0Q;AAAA,MAYxV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,UAAD;AAAA,IAAQ,UAAU,UAAU;AAAA,IAAc,WAAU;AAAA,KAChD,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAoH,SAC1H,UAAU,eAAe,SAAS;AAAA;;;ACjL5E;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoC,kBACpC,wBAAqB,oCACrB,cAAwB,oCAExB,eAAyC,4BACzC,gBAA8B;;;ACLvB,8BAA8B,SAAkB,MAAc,cAA8B;AAC/F,MAAM,MAAM,IAAI,IAAI,QAAQ,MACtB,QAAS,SAAS,IAAI,aAAa,IAAI,SAAS,IAAI;AAC1D,SAAI,MAAM,SAGH,eAFI;AAAA;AAKR,iCAAiC,SAAkB,MAA6B;AAEnF,SAAO,AADK,IAAI,IAAI,QAAQ,KACjB,aAAa,IAAI;AAAA;;;ACXzB,yBAAyB,MAAc,MAAqB,MAAM,WAA0B,MAAc;AAC7G,MAAM,SAAS,IAAI;AACnB,gBAAO,OAAO,QAAQ,OAEnB,OACC,OAAO,OAAO,OAAO,MAGtB,YACC,OAAO,OAAO,YAAY,WAGvB,4BAA4B,OAAO;AAAA;;;ACHvC,eAAe,EAAE,UAAU,SAAS,MAAM,YAAmB;AAChE,SACI,oCAAC,OAAD;AAAA,IAAK,IAAG;AAAA,IAAe,eAAY;AAAA,IAAO,WAAU;AAAA,KAChD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAoB,SAClC,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,SAAS,MAAM;AAAA,KACjC,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAqB,OAAM;AAAA,QAG5C,oCAAC,OAAD,MACM,WAEN,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,KAAD;AAAA,IAAG,MAAM,gBAAgB,MAAM;AAAA,IAAW,QAAO;AAAA,IAAS,WAAU;AAAA,KAChE,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAA8E,WAIlG,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,SAAS,MAAM;AAAA,IAAW,WAAU;AAAA,KAA4M;AAAA;;;AC7BvR,IAAM,iBAAiB,MAAM,OAAO,SAAS,KAAK,aAE5C,kBAAkB,MAAM,OAAO,SAAS,KAAK;;;AJoBnD,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AAEjE,MAAM,EAAE,WAAW,MAAM,yBAAQ;AACjC,MAAG,CAAC;AACA,WAAO,2BAAS,GAAG,QAAQ,IAAI,qCAAuC,QAAQ;AAGlF,MAAM,EAAE,oBAAoB,QAEtB,WAAW,MAAM,GAAG,QAAQ,UAAU;AAAA,IACxC,OAAO;AAAA,MACH;AAAA,MACA;AAAA;AAAA,IAEJ,SAAS;AAAA,MACL,SAAS;AAAA,QACL,SAAS;AAAA,UACL,MAAM;AAAA;AAAA;AAAA,MAGd,eAAe;AAAA,QACX,SAAS;AAAA,UACL,WAAW;AAAA;AAAA;AAAA;AAAA;AAM3B,MAAG,CAAC;AACA,WAAO,2BAAS;AAGpB,MAAM,YAAY,wBAAwB,SAAS,kBAAkB,MAC/D,UAAU,QAAQ,IAAI;AAE5B,SAAO,EAAE,UAAU,WAAW;AAAA;AAGnB,iCAAiC;AAE5C,MAAM,EAAE,UAAU,WAAW,YAAY,oCACnC,EAAE,eAAe,SAAS,UAAU,UACpC,EAAG,cAAc,eACjB,CAAC,OAAO,YAAY,4BAAS;AAEnC,+BAAU,MAAM;AACZ,aAAS;AAAA,KACV;AAEH,MAAM,uBAAuB,CAAC,SAAc;AAvEhD;AAuEmD,2BAAU,KAAK,cAAY,SAAS,SAAS,UAA7C,mBAAoD;AAAA,KAE7F,gBAAgB,MAAM,SAAS,KAE/B,iBAAiB,MAEZ,sDADO,sCAAU,WAAU,KAAK,cAAO;AAAA;AAKlD,SACI,0DACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACT,cAAc,OAEnB,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAkD,WAAQ,OAAM,UAE7E,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACb,oCAAC,SAAD,MAEQ,QAAQ,IAAI,CAAC,EAAE,IAAI,MAAM,OAAO,gBAC5B,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,IAAoB,KAAK;AAAA,KACnC,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACT,qBAAqB,QAE1B,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACR,QAAQ,SAAS,UAEvB,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAEN,YACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAiB,cAEnC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAe,uBAazE,QACM,oCAAC,OAAD;AAAA,IAAO,SAAS;AAAA,IAAe,MAAM;AAAA,IAAkB,UAAU,GAAG,kCAAkC,qCAAU;AAAA,KAC5G,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,KAAD,MAAG,8CAEC,oCAAC,UAAD,MAAQ,KAAG,qCAAU,OAAO,cAI1C,MAGF,SAAS,sCAAU,WAAU,KACvB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACT,oCAAC,+BAAD;AAAA,IACI,OAAO;AAAA,IACP,QAAQ,oBAAoB;AAAA,QAGtC;AAAA;;;AK7ItB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB,2BAClB,cAAwB,oCAExB,eAAyC,4BACzC,gBAA2C,6BAC3C,iBAA4D,kBAC5D,0BAAqB;AAyBd,IAAM,UAAyB,OAAO,EAAE,cAAc;AACzD,MAAM,EAAE,WAAW,MAAM,yBAAQ;AACjC,MAAG,CAAC;AACA,WAAO,2BAAS,GAAG,QAAQ,IAAI,qCAAuC,QAAQ;AAGlF,MAAM,OAAO,qBAAqB,SAAS,YAAY,IACjD,OAAO,qBAAqB,SAAS,UAAU,IAC/C,SAAS,wBAAwB,SAAS,WAE1C,SAAqB;AAAA,IACvB;AAAA;AAGJ,EAAG,UACC,QAAO,gBAAgB;AAAA,IACnB,MAAM;AAAA,MACF,UAAU;AAAA;AAAA;AAKtB,MAAM,aAAa,MAAM,GAAG,QAAQ,MAAM;AAAA,IACtC,OAAO,mBACA;AAAA,MAIL,gBAAgB,GAAG,QAAQ,SAAS;AAAA,IACtC;AAAA,IACA;AAAA,IACA,OAAO,mBACA;AAAA,IAEP,SAAS;AAAA,MACL,WAAW;AAAA;AAAA,IAEf,SAAS;AAAA,MACL,eAAe;AAAA,QACX,SAAS;AAAA,UACL,UAAU;AAAA;AAAA;AAAA;AAAA,MAMpB,CAAC,OAAO,YAAY,MAAM,QAAQ,IAAI,CAAE,YAAY,iBACpD,iBAAiB,SAAS,IAAI,CAAC,EAAE,eAAe,YAAa,iCAAI,gBAAJ,EAAmB,WAEhF,UAAU,OAAO,GAGjB,UAAU,AAFK,OAAO,OAEG,OAEzB,UAAU,QAAQ,IAAI;AAG5B,SAAO,EAAE,OAAO,gBAAgB,QAAQ,MAAM,SAAS,SAAS;AAAA;AAGrD,oCAAoC;AAE/C,MAAM,WAAW,kCACX,EAAE,gBAAgB,SAAS,SAAS,QAAQ,QAAQ,YAAY,oCAChE,CAAC,MAAM,WAAW,6BAAwB;AAEhD,gCAAU,MAAM;AACZ,IAAG,SAAS,MACR,SAAS;AAAA,KAEd,CAAC;AAEJ,MAAM,sBAAsB,CAAC,UAAyC,QAAQ,MAAM,OAAO,QAErF,iBAAiB,CAAC,UAAqB;AACzC,UAAM,kBACN,SAAS,kCAAkC;AAAA,KAGzC,gBAAgB,MAAM;AACxB,QAAG,WAAW,KAAK,CAAC;AAChB,aAAO;AAGX,QAAM,SAAS,IAAI,mBACb,aAAa,SAAS;AAC5B,WAAG,aAAa,KACZ,OAAO,OAAO,UAAU,WAAW,aAGpC,QACC,OAAO,OAAO,UAAU,OAGrB,2BAA2B,OAAO;AAAA,KAGvC,gBAAgB,MAAM;AACxB,QAAM,SAAS,IAAI,mBAEb,aAAa,SAAS;AAC5B,kBAAO,OAAO,UAAU,WAAW,aAEhC,QACC,OAAO,OAAO,UAAU,OAGrB,2BAA2B,OAAO;AAAA;AAG7C,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAqC,gBACnD,oCAAC,QAAD;AAAA,IAAM,UAAU;AAAA,IAAgB,WAAU;AAAA,KACtC,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,IAAS,WAAU;AAAA,KAAiD,WACnF,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,eAAY;AAAA,IAAO,WAAU;AAAA,IAAwB,MAAK;AAAA,IAAO,QAAO;AAAA,IAAe,SAAQ;AAAA,IAAY,OAAM;AAAA,KAA6B,oCAAC,QAAD;AAAA,IAAM,eAAc;AAAA,IAAQ,gBAAe;AAAA,IAAQ,aAAY;AAAA,IAAI,GAAE;AAAA,QAE5N,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,IAAG;AAAA,IAAS,MAAK;AAAA,IAAS,WAAU;AAAA,IAAsI,aAAY;AAAA,IAAY,UAAQ;AAAA,IAAC,UAAU;AAAA,MAC1O,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAA0K,cAItN,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACb,oCAAC,MAAD,MACI,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,SAGtC,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,aAGtC,oCAAC,MAAD,MAAI,UAGJ,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,gBAGtC,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,cAK9C,oCAAC,SAAD,MACM,eAAe,SAAS,IACpB,eAAe,IAAI,mBACjB,oCAAC,MAAD;AAAA,IAAI,KAAK,cAAc;AAAA,IAAI,WAAU;AAAA,KACjC,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KACrB,cAAc,OAEnB,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACT,cAAc,SAAS,OAE5B,oCAAC,MAAD,OAGA,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACT,0BAAM,cAAc,WAAW,OAAO,yBAE3C,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,8BAAD;AAAA,IAAM,IAAI,uBAAuB,cAAc;AAAA,IAAM,WAAU;AAAA,KAC3D,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAuG,UAK3H,oCAAC,KAAD;AAAA,IAAG,MAAM,gBAAgB;AAAA;AAAA,GAAiF,GAAG,kCAAkC,cAAc;AAAA,IAAO,QAAO;AAAA,IAAS,WAAU;AAAA,KAAqM,eAOjZ,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAI,SAAS;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD,MACI,oCAAC,UAAD,MACI,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAiB,KAAI;AAAA,IAAQ,OAAM;AAAA,OAEhD,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAoC,iBAUjF,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,8BAAD;AAAA,IAAM,IAAI;AAAA,IAAiB,WAAW,+YAA+Y,UAAU,KAAI;AAAA,KAC/b,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAuG,cAK3H,oCAAC,8BAAD;AAAA,IAAM,IAAI;AAAA,IAAiB,WAAW,+YAA+Y,UAAU,KAAK;AAAA,KAChc,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAuG;AAAA;;;AC1O/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB,oCAExB,eAAyD,4BACzD,iBAAmD;AAGnD,IAAM,mBAAmB,CAAC,MAAM,MAAK,MAAK,MAAK,MAAM,MAAM,MAAM,MAAM,MAAK,OAO/D,UAAyB,OAAO,EAAE,cAAc;AAEzD,MAAM,EAAE,WAAW,MAAM,yBAAQ;AACjC,MAAG,CAAC;AACA,WAAO,2BAAS,GAAG,QAAQ,IAAI,qCAAuC,QAAQ;AAIlF,MAAM,gBAAgB,AADV,IAAI,IAAI,QAAQ,KACF,aAAa,IAAI,kBACrC,aAAa,MAAM,GAAG,SAAS;AAErC,SAAO,EAAE,QAAQ,eAAe;AAAA,GAGvB,UAAyB,OAAO,EAAE,cAAc;AA3B7D;AA6BI,MAAM,EAAE,WAAW,MAAM,yBAAQ;AACjC,MAAG,CAAC;AACA,WAAO,2BAAS,GAAG,QAAQ,IAAI,qCAAuC,QAAQ;AAGlF,MAAM,WAAW,MAAM,QAAQ,YACzB,OAAO,gBAAS,IAAI,YAAb,mBAAsB,eAAc,IAC3C,aAAa,gBAAS,IAAI,kBAAb,mBAA4B,eAAc,IAEvD,gBAAgB,MAAM,GAAG,cAAc,OAAO;AAAA,IAChD,MAAM;AAAA,MACF;AAAA,MAAM;AAAA,MAAY;AAAA;AAAA,MAIpB,gBAAgB,iBAAiB,IAAI,iBAAe;AA5C9D;AA8CQ,QAAM,cAAc,iBAAS,IAAI,YAAY,+BAAzB,oBAAqD,eAAc,IACjF,SAAS,SAAS,IAAI,YAAY,0BAA0B;AAGlE,WAAO;AAAA,MACH,MAHS,YAAY;AAAA,MAIrB;AAAA,MACA;AAAA,MACA,iBAAiB,cAAc;AAAA;AAAA;AAIvC,eAAM,GAAG,SAAS,WAAW,EAAE,MAAM,kBAE9B,2BAAS;AAAA;AAGL,mCAAmC;AAC9C,MAAM,EAAE,UAAU,qCACZ,EAAE,eAAe,eAAe;AAEtC,SACI,0DAEI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,qBAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAE1B,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,IAAmD,SAAQ;AAAA,KAAO,uBAGnF,oCAAC,SAAD;AAAA,IAAO,cAAc;AAAA,IAAe,UAAQ;AAAA,IAAC,WAAU;AAAA,IAA6H,IAAG;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAO,aAAY;AAAA,MAElO,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAY,qHAEzB,oCAAC,OAAD,MACI,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,IAAa,WAAU;AAAA,KAA6C,aACnF,oCAAC,UAAD;AAAA,IAAQ,UAAQ;AAAA,IAAC,MAAK;AAAA,IAAa,IAAG;AAAA,IAAa,WAAU;AAAA,KACzD,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAG,0BACf,WAAW,IAAI,CAAC,EAAE,IAAI,WACpB,oCAAC,UAAD;AAAA,IAAQ,KAAK;AAAA,IAAI,OAAO;AAAA,KAAK,UAMrC,iBAAiB,IAAI,iBACjB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAA6D,KAAK;AAAA,KAC7E,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,IAA6C,SAAS,YAAY;AAAA,KAA2B,aAChG,SAAS,aAAa,MAEpC,oCAAC,SAAD;AAAA,IAAO,UAAQ;AAAA,IAAC,WAAU;AAAA,IAA6H,IAAI,YAAY;AAAA,IAA2B,MAAM,YAAY;AAAA,IAA2B,MAAK;AAAA,IAAO,aAAa,YAAY,SAAS,aAAa;AAAA,OAE9S,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD,MACI,oCAAC,SAAD;AAAA,IAAO,IAAI,YAAY;AAAA,IAA2B,OAAM;AAAA,IAAO,MAAM,YAAY;AAAA,IAAsB,MAAK;AAAA,IAAQ,WAAU;AAAA,MAC9H,oCAAC,SAAD;AAAA,IAAO,SAAS,YAAY;AAAA,IAA2B,WAAU;AAAA,KAA0Q,UAK/U,oCAAC,OAAD,MACI,oCAAC,SAAD;AAAA,IAAO,IAAI,YAAY;AAAA,IAA4B,OAAM;AAAA,IAAQ,MAAM,YAAY;AAAA,IAAsB,MAAK;AAAA,IAAQ,WAAU;AAAA,MAChI,oCAAC,SAAD;AAAA,IAAO,SAAS,YAAY;AAAA,IAA4B,WAAU;AAAA,KAA0Q,cAShW,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,UAAD;AAAA,IAAQ,UAAU,UAAU;AAAA,IAAc,WAAU;AAAA,KAChD,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAoH,SAC1H,UAAU,eAAe,SAAS;AAAA;;;AC1H5E;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkB,2BAClB,cAAwB,oCAExB,eAAyC,4BACzC,iBAAiD;AAIjD,qBAA4D;AAoBrD,IAAM,UAAyB,OAAO,EAAE,cAAc;AAEzD,MAAM,EAAE,WAAW,MAAM,yBAAQ;AACjC,MAAG,CAAC;AACA,WAAO,2BAAS,GAAG,QAAQ,IAAI,qCAAuC,QAAQ;AAGlF,MAAM,OAAO,qBAAqB,SAAS,YAAY,IACjD,OAAO,qBAAqB,SAAS,UAAU,IAC/C,SAAS,wBAAwB,SAAS,WAE1C,SAAqB;AAAA,IACvB;AAAA;AAGJ,EAAG,UACC,QAAO,OAAO;AAAA,IACV,UAAU;AAAA;AAIlB,MAAM,aAAc,GAAG,cAAc,MAAM;AAAA,IACvC,OAAO,mBACA;AAAA,MAIL,sBAAsB,GAAG,cAAc,SAAS;AAAA,IAClD;AAAA,IACA;AAAA,IACA,OAAO,mBACA;AAAA,IAEP,SAAS;AAAA,MACL,WAAW;AAAA;AAAA,IAEf,SAAS;AAAA,MACL,UAAU;AAAA;AAAA,MAIZ,CAAC,OAAO,kBAAkB,MAAM,QAAQ,IAAI,CAAE,YAAY,uBAE1D,UAAU,OAAO,GAGjB,UAAU,AAFK,OAAO,OAEG,OAEzB,UAAU,QAAQ,IAAI;AAE5B,SAAO,EAAE,OAAO,gBAAgB,QAAQ,MAAM,SAAS,SAAS;AAAA;AAGrD,kCAAkC;AAE7C,MAAM,WAAW,mCACX,EAAE,gBAAgB,SAAS,SAAS,QAAQ,QAAQ,YAAY,qCAChE,CAAC,MAAM,WAAW,6BAAwB;AAEhD,gCAAU,MAAM;AACZ,IAAG,SAAS,MACR,SAAS;AAAA,KAEd,CAAC;AAEJ,MAAM,sBAAsB,CAAC,UAAyC,QAAQ,MAAM,OAAO,QAErF,iBAAiB,CAAC,UAAqB;AACzC,UAAM,kBACN,SAAS,+BAA+B;AAAA,KAGtC,gBAAgB,MAAM;AACxB,QAAG,WAAW,KAAK,CAAC;AAChB,aAAO;AAGX,QAAM,SAAS,IAAI,mBACb,aAAa,SAAS;AAC5B,WAAG,aAAa,KACZ,OAAO,OAAO,UAAU,WAAW,aAGpC,QACC,OAAO,OAAO,UAAU,OAGrB,wBAAwB,OAAO;AAAA,KAGpC,gBAAgB,MAAM;AACxB,QAAM,SAAS,IAAI,mBAEb,aAAa,SAAS;AAC5B,kBAAO,OAAO,UAAU,WAAW,aAEhC,QACC,OAAO,OAAO,UAAU,OAGrB,wBAAwB,OAAO;AAAA;AAG1C,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAqC,sBACnD,oCAAC,QAAD;AAAA,IAAM,UAAU;AAAA,IAAgB,WAAU;AAAA,KACtC,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,IAAS,WAAU;AAAA,KAAiD,WACnF,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,eAAY;AAAA,IAAO,WAAU;AAAA,IAAwB,MAAK;AAAA,IAAO,QAAO;AAAA,IAAe,SAAQ;AAAA,IAAY,OAAM;AAAA,KAA6B,oCAAC,QAAD;AAAA,IAAM,eAAc;AAAA,IAAQ,gBAAe;AAAA,IAAQ,aAAY;AAAA,IAAI,GAAE;AAAA,QAE5N,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,IAAG;AAAA,IAAS,MAAK;AAAA,IAAS,WAAU;AAAA,IAAsI,aAAY;AAAA,IAAY,UAAQ;AAAA,IAAC,UAAU;AAAA,MAC1O,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAA0K,cAItN,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACb,oCAAC,MAAD,MACI,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,SAGtC,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,aAGtC,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,cAGtC,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,cAK9C,oCAAC,SAAD,MACM,eAAe,SAAS,IACpB,eAAe,IAAI,mBACjB,oCAAC,MAAD;AAAA,IAAI,KAAK,cAAc;AAAA,IAAI,WAAU;AAAA,KACjC,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KACrB,cAAc,OAEnB,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACT,cAAc,SAAS,OAE5B,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACT,2BAAM,cAAc,WAAW,OAAO,yBAE3C,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,qBAAD;AAAA,IAAM,IAAI,uBAAuB,cAAc;AAAA,IAAM,WAAU;AAAA,KAC3D,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAuG,UAK3H,oCAAC,KAAD;AAAA,IAAG,MAAM,gBAAgB;AAAA;AAAA,GAAiF,GAAG,kCAAkC,cAAc;AAAA,IAAO,QAAO;AAAA,IAAS,WAAU;AAAA,KAAqM,eAOjZ,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAI,SAAS;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD,MACI,oCAAC,UAAD,MACI,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAiB,KAAI;AAAA,IAAQ,OAAM;AAAA,OAEhD,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAoC,iBAUjF,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,qBAAD;AAAA,IAAM,IAAI;AAAA,IAAiB,WAAW,+YAA+Y,UAAU,KAAI;AAAA,KAC/b,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAuG,cAK3H,oCAAC,qBAAD;AAAA,IAAM,IAAI;AAAA,IAAiB,WAAW,+YAA+Y,UAAU,KAAK;AAAA,KAChc,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAuG;AAAA;;;AC1N/I;AAAA;AAAA;AAAA;AAaO,IAAM,UAAyB,OAAO,EAAE,cAAc;AAEzD,MAAM,OAAO,qBAAqB,SAAS,YAAY,IACjD,OAAO,qBAAqB,SAAS,UAAU,IAC/C,SAAS,wBAAwB,SAAS,WAC1C,aAAa,wBAAwB,SAAS,gBAE9C,SAAqB;AAAA,IACvB,QAAQ;AAAA;AAGZ,EAAG,cACC,QAAO,aAAa,aAGrB,UACC,QAAO,OAAO;AAAA,IACV,UAAU;AAAA;AAIlB,MAAM,aAAa,GAAG,cAAc,MAAM;AAAA,IACtC,OAAO,mBACA;AAAA,MAIL,sBAAsB,GAAG,cAAc,SAAS;AAAA,IAClD;AAAA,IACA;AAAA,IACA,OAAO,mBACA;AAAA,IAEP,SAAS;AAAA,MACL,WAAW;AAAA;AAAA,MAIb,CAAC,OAAO,kBAAkB,MAAM,QAAQ,IAAI,CAAE,YAAY;AAEhE,SAAO,EAAE,MAAM,MAAM,QAAQ,OAAO;AAAA;;;ACrDxC;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA4D,kBAE5D,eAAyC,4BACzC,iBAA0C;;;ACH1C,+BAAqB;AASd,mCAAmC,EAAE,eAAe,WAAmB;AAC1E,MAAM,EAAE,MAAM,IAAI,SAAS,eAAe;AAgC1C,SACI,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACV,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KACrB,OAEL,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACT,AApCO,OACb,UAEK,oCAAC,+BAAD;AAAA,IAAM,IAAI,uBAAuB;AAAA,IAAM,WAAU;AAAA,KAC7C,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAqG,WAO9H,aAEK,oCAAC,+BAAD;AAAA,IAAM,IAAI,uBAAuB;AAAA,IAAM,WAAU;AAAA,KAC7C,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAqG,WAQ7H,oCAAC,+BAAD;AAAA,IAAM,IAAI,2BAA2B;AAAA,IAAM,WAAU;AAAA,KACjD,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAuG,gBAevH,oCAAC,KAAD;AAAA,IAAG,MAAM,gBAAgB;AAAA;AAAA,GAAiF,GAAG,kCAAkC;AAAA,IAAO,QAAO;AAAA,IAAS,WAAU;AAAA,KAAkN;AAAA;;;AD5ClZ,kBAAwB;;;AEHjB,mCAAmC,gBAAiC,QAAuB,UAA6C;AAC3I,SAAO,eAAe,IAAI,UAAQ;AAC9B,QAAM,UAAU,WAAW,KAAK,QAC1B,aAAa,SAAS,SAAS,KAAK;AAC1C,WAAO,iCAAI,OAAJ,EAAU,SAAS;AAAA;AAAA;;;AFoB3B,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AACjE,MAAM,EAAE,SAAS,QAEX,WAAW,MAAM,GAAG,SAAS,UAAU;AAAA,IACzC,OAAO,EAAE;AAAA;AAGb,MAAG,CAAC;AACA,WAAO,2BAAS;AAGpB,MAAM,EAAE,WAAW,MAAM,yBAAQ,UAE7B,WAAqB;AACzB,EAAG,UASC,YAAW,AARU,OAAM,GAAG,QAAQ,SAAS;AAAA,IAC3C,OAAO;AAAA,MACH;AAAA;AAAA,IAEJ,QAAQ;AAAA,MACJ,iBAAiB;AAAA;AAAA,MAGD,IAAI,aAAW,QAAQ;AAGnD,MAAM,UAAU,QAAQ,IAAI;AAE5B,SAAO,EAAE,MAAM,UAAU,QAAQ,UAAU;AAAA;AAGhC,wBAAwB;AA1DvC;AA4DI,MAAM,EAAE,UAAU,QAAQ,UAAU,YAAY,qCAC1C,CAAC,gBAAgB,qBAAqB,6BAAkC,KAExE,CAAC,QAAQ,aAAa,6BAAS,IAC/B,CAAC,QAAQ,YAAY,6BAAS,KAC9B,EAAE,MAAM,IAAI,eAAe,UAE3B,UAAU;AAEhB,gCAAU,MAAM,QAAQ,KAExB,8BAAU,MAAM;AACZ,QAAG,CAAC,QAAQ;AACR;AAGJ,QAAM,EAAE,MAAM,gBAAgB,wBAAwB,QAAQ;AAC9D,IACI,kBADJ,AAAG,SAAS,IACU,0BAA0B,qBAAqB,QAAQ,YAEvD,CAAC,GAAG,gBAAgB,GAAG,0BAA0B,qBAAqB,QAAQ;AAAA,KAErG,CAAC,QAAQ,QAEZ,8BAAU,MAAM;AACZ,IAAG,WAAW,MACV;AAAA,KAEL,CAAC;AAEJ,MAAM,eAAe,MAAM;AACvB,QAAM,aAAa,SAAS;AAC5B,SAAK,aACL,UAAU;AAAA,KAGR,sBAAsB,CAAC,UAAyC,SAAS,MAAM,OAAO,QAEtF,iBAAiB,CAAC,UAAqB;AACzC,UAAM,kBACN;AAAA,KAGE,OAAO,CAAC,eAAuB,MAAM;AACvC,QAAM,SAAS,IAAI;AACnB,WAAO,OAAO,eAAe,aAC7B,OAAO,OAAO,UAAU,aAAa,aACrC,OAAO,OAAO,UAAU,SAExB,QAAQ,KAAK,uBAAuB,OAAO;AAAA,KAGzC,yBAAyB,MAAM;AAEjC,SAAK,IACL,UAAU;AAAA;AAGd,SACI,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAqC,cAAW,OAE9D,oCAAC,QAAD;AAAA,IAAM,UAAU;AAAA,IAAgB,WAAU;AAAA,KACtC,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,IAAS,WAAU;AAAA,KAAiD,WACnF,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,eAAY;AAAA,IAAO,WAAU;AAAA,IAAwB,MAAK;AAAA,IAAO,QAAO;AAAA,IAAe,SAAQ;AAAA,IAAY,OAAM;AAAA,KAA6B,oCAAC,QAAD;AAAA,IAAM,eAAc;AAAA,IAAQ,gBAAe;AAAA,IAAQ,aAAY;AAAA,IAAI,GAAE;AAAA,QAE5N,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,IAAG;AAAA,IAAS,MAAK;AAAA,IAAS,WAAU;AAAA,IAAsI,aAAY;AAAA,IAAY,UAAQ;AAAA,IAAC,UAAU;AAAA,MAC1O,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAoK,cAIhN,oCAAC,OAAD,MACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACb,oCAAC,MAAD,MACI,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,uBAGtC,oCAAC,MAAD;AAAA,IAAI,OAAM;AAAA,IAAM,WAAU;AAAA,KAAY,cAK9C,oCAAC,SAAD,MAEI,eAAe,SAAS,IACtB,eAAe,IAAI,mBACjB,oCAAC,2BAAD;AAAA,IAA2B,KAAK,cAAc;AAAA,IAAI;AAAA,IAA8B;AAAA,QAElF,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAI,SAAS;AAAA,KACT,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD,MACI,oCAAC,UAAD,MACI,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAiB,KAAI;AAAA,IAAQ,OAAM;AAAA,OAEhD,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAoC,iBAU7E,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACT,eAAe,SAAS,0CAAS,SAAT,mBAAe,SACnC,oCAAC,UAAD;AAAA,IAAQ,UAAU,QAAQ,UAAU;AAAA,IAAc,MAAK;AAAA,IAAS,SAAS;AAAA,IAAc,WAAU;AAAA,KAC/F,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACX,QAAQ,UAAU,eAAe,iBAAiB,gBAGzD;AAAA;;;AGlL9B;AAAA;AAAA;AAAA;AAAA,oBAAuB;AAER,sBAAsB;AACnC,SACE,oCAAC,OAAD;AAAA,IAAK,OAAO,EAAE,QAAQ,kBAAkB,SAAS;AAAA,KAC/C,oCAAC,MAAD,MAAI,kBACJ,oCAAC,sBAAD;AAAA,IAAQ,SAAS;AAAA,IAAQ,MAAM;AAAA;AAAA;;;ACNrC;AAAA;AAAA;AAAA;AAAA,oBAAuB;AAER,sBAAsB;AACnC,SACE,oCAAC,OAAD;AAAA,IAAK,OAAO,EAAE,QAAQ,kBAAkB,SAAS;AAAA,KAC/C,oCAAC,MAAD,MAAI,kBACJ,oCAAC,sBAAD;AAAA,IAAQ,SAAS;AAAA,IAAQ,MAAM;AAAA;AAAA;;;ACNrC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoC,yBAGpC,iBAA8B;;;ACF9B,qBAAqB;;;ACDrB,IAAM,YAAY;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAGG,0BAA0B,OAAuB;AACpD,MAAM,QAAQ,UAAU;AAExB,MAAG,QAAQ;AACP,WAAO,UAAU;AAGrB,MAAM,UAAU,QAAQ,OAClB,QAAQ,QAAQ;AACtB,SAAO,UAAU,QAAQ;AAAA;;;ADbtB,0BAA0B,EAAE,cAAqB;AACpD,SACI,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACf,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA0B,wBACxC,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACR,WAAW,IAAI,CAAC,EAAE,IAAI,MAAM,QAAQ,UAClC,oCAAC,MAAD;AAAA,IAAI,KAAK;AAAA,KACL,oCAAC,qBAAD;AAAA,IAAM,IAAI,aAAa;AAAA,IAAQ,WAAW,4GAA4G,iBAAiB;AAAA,KAClK;AAAA;;;AEhB7B,qBAA4B,6BAC5B,iBAAoC;AAG7B,sBAAsB;AAEzB,MAAM,CAAC,MAAM,WAAW,6BAAS,KAC3B,CAAC,MAAM,WAAW,6BAAS;AAEjC,gCAAU,MAAM;AACZ,YAAQ,uCAAuC;AAAA,KAChD,CAAC;AAEJ,MAAM,WAAW;AASjB,SACI,oCAAC,WAAD,MACI,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA0B,6BACvC,oCAAC,QAAD;AAAA,IAAM,UARS,CAAC,UAAqB;AACzC,YAAM,kBACN,SAAS;AAAA;AAAA,IAM2B,WAAU;AAAA,KACtC,oCAAC,SAAD;AAAA,IAAO,OAAO;AAAA,IAAM,UAXL,CAAC,UAAsB,QAAQ,MAAM,OAAO;AAAA,IAWT,WAAU;AAAA,IAA6H,IAAG;AAAA,IAAW,MAAK;AAAA,IAAO,aAAY;AAAA,MAC/N,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAmO;AAAA;;;AC3BnR,qBAAqB;AAEd,4BAA4B;AAC/B,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,qBAAD;AAAA,IAAM,IAAG;AAAA,IAAuB,WAAU;AAAA,KAA4C,sBAGtF,oCAAC,QAAD,MAAM,MACN,oCAAC,qBAAD;AAAA,IAAM,IAAG;AAAA,IAA2B,WAAU;AAAA,KAA4C;AAAA;;;ACA/F,gBAAgB,EAAE,cAAqB;AAC1C,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,kBAAD,OACA,oCAAC,YAAD,OACA,oCAAC,kBAAD;AAAA,IAAkB;AAAA;AAAA;;;ACflC,qBAAqB;;;ACMd,cAAc,EAAE,OAAO,YAAkB;AAC5C,SACI,oCAAC,OAAD;AAAA,IAAK,WAAW,GAAG,SAAS,WAAW,gBAAgB;AAAA,KACnD,oCAAC,OAAD;AAAA,IAAK,qBAAoB;AAAA,IAAO,SAAQ;AAAA,IAAe,OAAM;AAAA,IAA6B,MAAM,SAAS,WAAW,SAAS;AAAA,IAAW,WAAU;AAAA,KAAa,oCAAC,QAAD;AAAA,IAAM,GAAE;AAAA;AAAA;;;ADN5K,mBAAmB;AACtB,SACI,0DACI,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACf,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAoD,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAA6E,sBAAwB,0CACvL,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA6E,qIAC1F,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAEX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAiB,KAAI;AAAA,IAAgB,OAAM;AAAA,MACpD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAU,yBACxB,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA2B,gDAIhD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAkB,KAAI;AAAA,IAAgB,OAAM;AAAA,MACrD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAU,yBACxB,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA2B,gEAIhD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAe,KAAI;AAAA,IAAgB,OAAM;AAAA,MAClD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAU,oBACxB,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA2B,6DAIpD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,qBAAD;AAAA,IAAM,IAAG;AAAA,IAAW,WAAU;AAAA,KAAoP,gBAClR,oCAAC,qBAAD;AAAA,IAAM,IAAG;AAAA,IAAS,WAAU;AAAA,KAA4M,eAGhP,oCAAC,WAAD,MACI,oCAAC,MAAD,OACA,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAmD,sBACjE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAsB,KAAI;AAAA,IAAa,WAAU;AAAA,OAE9D,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAO,kGACpB,oCAAC,KAAD,MAAG,sHAKnB,oCAAC,MAAD;AAAA,IAAM,MAAK;AAAA,OAGf,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACf,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAmD,mBACjE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAO,gFAGpB,oCAAC,KAAD,MAAG,0FAIP,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAiB,KAAI;AAAA,IAAU,WAAU;AAAA,SAK9D,oCAAC,WAAD,MACI,oCAAC,MAAD,OACA,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAmD,kBACjE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAqB,KAAI;AAAA,IAAY,WAAU;AAAA,OAE5D,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAO,6GACpB,oCAAC,KAAD,MAAG,+KAKnB,oCAAC,MAAD;AAAA,IAAM,MAAK;AAAA,OAIf,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACf,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAmD,qBACjE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAO,4FAGpB,oCAAC,KAAD,MAAG,wHAIP,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,KAAI;AAAA,IAAiB,KAAI;AAAA,IAAU,WAAU;AAAA;AAAA;;;AN/FnE,IAAM,WAAyB,YAE7B,GAAE,YADU,MAAM,GAAG,SAAS;AAIxB,iBAAiB;AAC9B,MAAM,EAAE,eAAe;AACvB,SACE,0DACE,oCAAC,wBAAD,MACE,oCAAC,QAAD;AAAA,IAAQ;AAAA,OAGV,oCAAC,yBAAD,MACE,oCAAC,SAAD;AAAA;;;AQ3BR;AAAA;AAAA;AAAA;AAAA,oBAA4B;AAGb,kBAAkB;AAC/B,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD,OACA,oCAAC,2BAAD;AAAA;;;ACPN;AAAA;AAAA;AAAA;AAAe,oBAAoB;AAC/B,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD,MAAI;AAAA;;;ACJpB,IAAO,0BAAQ,EAAC,SAAU,YAAW,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,uCAAqC,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAK,kBAAmB,MAAO,cAAa,EAAC,IAAK,cAAa,UAAW,QAAO,MAAO,OAAM,OAAQ,QAAU,eAAgB,QAAU,QAAS,iCAAgC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,MAAO,6BAA4B,EAAC,IAAK,6BAA4B,UAAW,QAAO,MAAO,sBAAqB,OAAQ,QAAU,eAAgB,QAAU,QAAS,gDAA+C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,MAAO,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,QAAO,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,4CAA2C,SAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,MAAO,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,mCAAkC,SAAU,CAAC,qCAAoC,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,MAAO,eAAc,EAAC,IAAK,eAAc,UAAW,QAAO,MAAO,QAAO,OAAQ,QAAU,eAAgB,QAAU,QAAS,kCAAiC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,MAAO,+BAA8B,EAAC,IAAK,+BAA8B,UAAW,QAAO,MAAO,wBAAuB,OAAQ,QAAU,eAAgB,QAAU,QAAS,kDAAiD,SAAU,CAAC,qCAAoC,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,MAAO,8CAA6C,EAAC,IAAK,8CAA6C,UAAW,QAAO,MAAO,uCAAsC,OAAQ,QAAU,eAAgB,QAAU,QAAS,iEAAgE,SAAU,CAAC,qCAAoC,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,MAAO,8BAA6B,EAAC,IAAK,8BAA6B,UAAW,QAAO,MAAO,uBAAsB,OAAQ,QAAU,eAAgB,QAAU,QAAS,iDAAgD,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,MAAO,kDAAiD,EAAC,IAAK,kDAAiD,UAAW,QAAO,MAAO,2CAA0C,OAAQ,QAAU,eAAgB,QAAU,QAAS,qEAAoE,SAAU,CAAC,qCAAoC,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,MAAO,uCAAsC,EAAC,IAAK,uCAAsC,UAAW,QAAO,MAAO,0BAAyB,OAAQ,IAAK,eAAgB,QAAU,QAAS,0DAAyD,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,MAAO,8CAA6C,EAAC,IAAK,8CAA6C,UAAW,QAAO,MAAO,uCAAsC,OAAQ,QAAU,eAAgB,QAAU,QAAS,iEAAgE,SAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,MAAO,oBAAmB,EAAC,IAAK,oBAAmB,UAAW,QAAO,MAAO,aAAY,OAAQ,QAAU,eAAgB,QAAU,QAAS,uCAAsC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,MAAO,oBAAmB,EAAC,IAAK,oBAAmB,UAAW,QAAO,MAAO,aAAY,OAAQ,QAAU,eAAgB,QAAU,QAAS,uCAAsC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,QAAQ,KAAM;;;ACiBjnK,IAAM,QAAQ,EAAE,QAAQ,wBAClB,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,kDAAkD;AAAA,IAC9C,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,8CAA8C;AAAA,IAC1C,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,8CAA8C;AAAA,IAC1C,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,uCAAuC;AAAA,IACnC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,+BAA+B;AAAA,IAC3B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,8BAA8B;AAAA,IAC1B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,6BAA6B;AAAA,IACzB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,oBAAoB;AAAA,IAChB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,oBAAoB;AAAA,IAChB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,eAAe;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,cAAc;AAAA,IACV,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
